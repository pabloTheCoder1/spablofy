{"ast":null,"code":"import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n  constructor(t) {\n    this.uid = t;\n  }\n  isAuthenticated() {\n    return null != this.uid;\n  }\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey() {\n    return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n  }\n  isEqual(t) {\n    return t.uid === this.uid;\n  }\n}\n\n/** A user with a null UID. */\nd.UNAUTHENTICATED = new d(null),\n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nfunction p(t) {\n  m.setLogLevel(t);\n}\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    const n = e.map(v);\n    m.debug(`Firestore (${w}): ${t}`, ...n);\n  }\n}\nfunction g(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n    const n = e.map(v);\n    m.error(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\n/**\n * @internal\n */\nfunction _(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n    const n = e.map(v);\n    m.warn(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /** Formats an object as a JSON string, suitable for logging. */\n  var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nfunction b() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nfunction E(t, e) {\n  t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nfunction I(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst T = \"ok\",\n  A = \"cancelled\",\n  R = \"unknown\",\n  P = \"invalid-argument\",\n  V = \"deadline-exceeded\",\n  $ = \"not-found\",\n  N = \"already-exists\",\n  D = \"permission-denied\",\n  F = \"unauthenticated\",\n  x = \"resource-exhausted\",\n  S = \"failed-precondition\",\n  q = \"aborted\",\n  O = \"out-of-range\",\n  k = \"unimplemented\",\n  C = \"internal\",\n  L = \"unavailable\",\n  M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */\nclass U extends FirebaseError {\n  /** @hideconstructor */\n  constructor(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    super(t, e), this.code = t, this.message = e,\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass j {\n  constructor() {\n    this.promise = new Promise((t, e) => {\n      this.resolve = t, this.reject = e;\n    });\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass B {\n  constructor(t, e) {\n    this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", `Bearer ${t}`);\n  }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nclass Q {\n  getToken() {\n    return Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(d.UNAUTHENTICATED));\n  }\n  shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nclass z {\n  constructor(t) {\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n  invalidateToken() {}\n  start(t, e) {\n    this.changeListener = e,\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(this.token.user));\n  }\n  shutdown() {\n    this.changeListener = null;\n  }\n}\n\n/** Credential provider for the Lite SDK. */\nclass W {\n  constructor(t) {\n    this.auth = null, t.onInit(t => {\n      this.auth = t;\n    });\n  }\n  getToken() {\n    return this.auth ? this.auth.getToken().then(t => t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(this.auth.getUid()))) : null) : Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {}\n  shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nclass G {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.h = new Map();\n  }\n  /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */\n  l() {\n    return this.u ? this.u() : (\n    // Make sure this really is a Gapi client.\n    E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));\n  }\n  get headers() {\n    this.h.set(\"X-Goog-AuthUser\", this.i);\n    // Use array notation to prevent minification\n    const t = this.l();\n    return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), this.h;\n  }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nclass K {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r;\n  }\n  getToken() {\n    return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n  }\n  start(t, e) {\n    // Fire with initial uid.\n    t.enqueueRetryable(() => e(d.FIRST_PARTY));\n  }\n  shutdown() {}\n  invalidateToken() {}\n}\nclass Y {\n  constructor(t) {\n    this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n  }\n}\n\n/** AppCheck token provider for the Lite SDK. */\nclass H {\n  constructor(t) {\n    this.m = t, this.appCheck = null, t.onInit(t => {\n      this.appCheck = t;\n    });\n  }\n  getToken() {\n    return this.appCheck ? this.appCheck.getToken().then(t => t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null) : Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {}\n  shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(t, e, n, r, s, i, o, u) {\n    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n  }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n  constructor(t, e) {\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n  static empty() {\n    return new X(\"\", \"\");\n  }\n  get isDefaultDatabase() {\n    return \"(default)\" === this.database;\n  }\n  isEqual(t) {\n    return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n  }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n  constructor(t, e, n) {\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n  get length() {\n    return this.len;\n  }\n  isEqual(t) {\n    return 0 === Z.comparator(this, t);\n  }\n  child(t) {\n    const e = this.segments.slice(this.offset, this.limit());\n    return t instanceof Z ? t.forEach(t => {\n      e.push(t);\n    }) : e.push(t), this.construct(e);\n  }\n  /** The index of one past the last segment of the path. */\n  limit() {\n    return this.offset + this.length;\n  }\n  popFirst(t) {\n    return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n  }\n  popLast() {\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n  firstSegment() {\n    return this.segments[this.offset];\n  }\n  lastSegment() {\n    return this.get(this.length - 1);\n  }\n  get(t) {\n    return this.segments[this.offset + t];\n  }\n  isEmpty() {\n    return 0 === this.length;\n  }\n  isPrefixOf(t) {\n    if (t.length < this.length) return !1;\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n    return !0;\n  }\n  isImmediateParentOf(t) {\n    if (this.length + 1 !== t.length) return !1;\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n    return !0;\n  }\n  forEach(t) {\n    for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n  }\n  toArray() {\n    return this.segments.slice(this.offset, this.limit());\n  }\n  static comparator(t, e) {\n    const n = Math.min(t.length, e.length);\n    for (let r = 0; r < n; r++) {\n      const n = t.get(r),\n        s = e.get(r);\n      if (n < s) return -1;\n      if (n > s) return 1;\n    }\n    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n  }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nclass tt extends Z {\n  construct(t, e, n) {\n    return new tt(t, e, n);\n  }\n  canonicalString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join(\"/\");\n  }\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n  static fromString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    const e = [];\n    for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      t[_key4] = arguments[_key4];\n    }\n    for (const n of t) {\n      if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n      // Strip leading and traling slashed.\n      e.push(...n.split(\"/\").filter(t => t.length > 0));\n    }\n    return new tt(e);\n  }\n  static emptyPath() {\n    return new tt([]);\n  }\n}\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nclass nt extends Z {\n  construct(t, e, n) {\n    return new nt(t, e, n);\n  }\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n  static isValidIdentifier(t) {\n    return et.test(t);\n  }\n  canonicalString() {\n    return this.toArray().map(t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t)).join(\".\");\n  }\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Returns true if this field references the key of a document.\n   */\n  isKeyField() {\n    return 1 === this.length && \"__name__\" === this.get(0);\n  }\n  /**\n   * The field designating the key of a document.\n   */\n  static keyField() {\n    return new nt([\"__name__\"]);\n  }\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n  static fromServerFormat(t) {\n    const e = [];\n    let n = \"\",\n      r = 0;\n    const s = () => {\n      if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n      e.push(n), n = \"\";\n    };\n    let i = !1;\n    for (; r < t.length;) {\n      const e = t[r];\n      if (\"\\\\\" === e) {\n        if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n        const e = t[r + 1];\n        if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n        n += e, r += 2;\n      } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n    }\n    if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n    return new nt(e);\n  }\n  static emptyPath() {\n    return new nt([]);\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */\nclass rt {\n  constructor(t) {\n    this.path = t;\n  }\n  static fromPath(t) {\n    return new rt(tt.fromString(t));\n  }\n  static fromName(t) {\n    return new rt(tt.fromString(t).popFirst(5));\n  }\n  static empty() {\n    return new rt(tt.emptyPath());\n  }\n  get collectionGroup() {\n    return this.path.popLast().lastSegment();\n  }\n  /** Returns true if the document is in the specified collectionId. */\n  hasCollectionId(t) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n  }\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  getCollectionGroup() {\n    return this.path.get(this.path.length - 2);\n  }\n  /** Returns the fully qualified path to the parent collection. */\n  getCollectionPath() {\n    return this.path.popLast();\n  }\n  isEqual(t) {\n    return null !== t && 0 === tt.comparator(this.path, t.path);\n  }\n  toString() {\n    return this.path.toString();\n  }\n  static comparator(t, e) {\n    return tt.comparator(t.path, e.path);\n  }\n  static isDocumentKey(t) {\n    return t.length % 2 == 0;\n  }\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n  static fromSegments(t) {\n    return new rt(new tt(t.slice()));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction st(t, e, n) {\n  if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      const e = /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */(t);\n      return e ? `a custom ${e} object` : \"an object\";\n    }\n  }\n  return \"function\" == typeof t ? \"a function\" : b();\n}\nfunction ct(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && (\n  // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      const n = ut(t);\n      throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n    }\n  }\n  return t;\n}\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction ht(t) {\n  return null == t;\n}\n\n/** Returns whether the value represents -0. */\nfunction lt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n  if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (t) {\n    case 200:\n      // OK\n      return T;\n    case 400:\n      // Bad Request\n      return S;\n\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n    case 401:\n      // Unauthorized\n      return F;\n    case 403:\n      // Forbidden\n      return D;\n    case 404:\n      // Not Found\n      return $;\n    case 409:\n      // Conflict\n      return q;\n\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n    case 416:\n      // Range Not Satisfiable\n      return O;\n    case 429:\n      // Too Many Requests\n      return x;\n    case 499:\n      // Client Closed Request\n      return A;\n    case 500:\n      // Internal Server Error\n      return R;\n\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n    case 501:\n      // Unimplemented\n      return k;\n    case 503:\n      // Service Unavailable\n      return L;\n    case 504:\n      // Gateway Timeout\n      return V;\n    default:\n      return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n(wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", wt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", wt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", wt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", wt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", wt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", wt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", wt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\nclass pt extends\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n  constructor(t) {\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    const e = t.ssl ? \"https\" : \"http\";\n    this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n  get v() {\n    // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n    // where to run the query, and expect the `request` to NOT specify the \"path\".\n    return !1;\n  }\n  I(t, e, n, r, s) {\n    const i = this.T(t, e);\n    y(\"RestConnection\", \"Sending: \", i, n);\n    const o = {};\n    return this.A(o, r, s), this.R(t, i, o, n).then(t => (y(\"RestConnection\", \"Received: \", t), t), e => {\n      throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), e;\n    });\n  }\n  P(t, e, n, r, s, i) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.I(t, e, n, r, s);\n  }\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n  A(t, e, n) {\n    t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w,\n    // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach((e, n) => t[n] = e), n && n.headers.forEach((e, n) => t[n] = e);\n  }\n  T(t, e) {\n    const n = ft[t];\n    return `${this.p}/v1/${e}:${n}`;\n  }\n} {\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  constructor(t, e) {\n    super(t), this.V = e;\n  }\n  $(t, e) {\n    throw new Error(\"Not supported by FetchConnection\");\n  }\n  async R(t, e, n, r) {\n    var s;\n    const i = JSON.stringify(r);\n    let o;\n    try {\n      o = await this.V(e, {\n        method: \"POST\",\n        headers: n,\n        body: i\n      });\n    } catch (t) {\n      const e = t;\n      throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n    }\n    if (!o.ok) {\n      let t = await o.json();\n      Array.isArray(t) && (t = t[0]);\n      const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n      throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n    }\n    return o.json();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const e =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n    n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else\n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n  return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass gt {\n  static N() {\n    // Alphanumeric characters\n    const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n      e = Math.floor(256 / t.length) * t.length;\n    // The largest byte value that is a multiple of `char.length`.\n    let n = \"\";\n    for (; n.length < 20;) {\n      const r = yt(40);\n      for (let s = 0; s < r.length; ++s)\n      // Only accept values that are [0, maxMultiple), this ensures they can\n      // be evenly mapped to indices of `chars` via a modulo operation.\n      n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n    }\n    return n;\n  }\n}\nfunction _t(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */\nfunction vt(t, e, n) {\n  return t.length === e.length && t.every((t, r) => n(t, e[r]));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction bt(t) {\n  let e = 0;\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n  return e;\n}\nfunction Et(t, e) {\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n  constructor(t) {\n    this.binaryString = t;\n  }\n  static fromBase64String(t) {\n    const e = atob(t);\n    return new It(e);\n  }\n  static fromUint8Array(t) {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const e =\n    /**\n    * Helper function to convert an Uint8array to a binary string.\n    */\n    function (t) {\n      let e = \"\";\n      for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n      return e;\n    }\n    /**\n    * Helper function to convert a binary string to an Uint8Array.\n    */(t);\n    return new It(e);\n  }\n  [Symbol.iterator]() {\n    let t = 0;\n    return {\n      next: () => t < this.binaryString.length ? {\n        value: this.binaryString.charCodeAt(t++),\n        done: !1\n      } : {\n        value: void 0,\n        done: !0\n      }\n    };\n  }\n  toBase64() {\n    return t = this.binaryString, btoa(t);\n    /** Converts a binary string to a Base64 encoded string. */\n    var t;\n  }\n  toUint8Array() {\n    return function (t) {\n      const e = new Uint8Array(t.length);\n      for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n      return e;\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n    (this.binaryString);\n  }\n  approximateByteSize() {\n    return 2 * this.binaryString.length;\n  }\n  compareTo(t) {\n    return _t(this.binaryString, t.binaryString);\n  }\n  isEqual(t) {\n    return this.binaryString === t.binaryString;\n  }\n}\nIt.EMPTY_BYTE_STRING = new It(\"\");\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nfunction At(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    let e = 0;\n    const n = Tt.exec(t);\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let t = n[1];\n      t = (t + \"000000000\").substr(0, 9), e = Number(t);\n    }\n    // Parse the date to get the seconds.\n    const r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n  return {\n    seconds: Rt(t.seconds),\n    nanos: Rt(t.nanos)\n  };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nfunction Rt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nfunction Pt(t) {\n  return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    // This will break in the year 10,000.\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n  static now() {\n    return Vt.fromMillis(Date.now());\n  }\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n  static fromDate(t) {\n    return Vt.fromMillis(t.getTime());\n  }\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n  static fromMillis(t) {\n    const e = Math.floor(t / 1e3),\n      n = Math.floor(1e6 * (t - 1e3 * e));\n    return new Vt(e, n);\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n  toDate() {\n    return new Date(this.toMillis());\n  }\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  toMillis() {\n    return 1e3 * this.seconds + this.nanoseconds / 1e6;\n  }\n  _compareTo(t) {\n    return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n  }\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n  isEqual(t) {\n    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n  }\n  /** Returns a textual representation of this `Timestamp`. */\n  toString() {\n    return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n  }\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n  toJSON() {\n    return {\n      seconds: this.seconds,\n      nanoseconds: this.nanoseconds\n    };\n  }\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n  valueOf() {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const t = this.seconds - -62135596800;\n    // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n    return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nfunction $t(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction Nt(t) {\n  const e = t.mapValue.fields.__previous_value__;\n  return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */\nfunction Dt(t) {\n  const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Ft = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n  return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2022 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * Represents a bound of a query.\n  *\n  * The bound is specified with the given components representing a position and\n  * whether it's just before or just after the position (relative to whatever the\n  * query order is).\n  *\n  * The position represents a logical index position for a query. It's a prefix\n  * of values for the (potentially implicit) order by clauses of a query.\n  *\n  * Bound provides a function to determine whether a document comes before or\n  * after a bound. This is influenced by whether the position is just before or\n  * just after the provided values.\n  */(t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nfunction St(t, e) {\n  if (t === e) return !0;\n  const n = xt(t);\n  if (n !== xt(e)) return !1;\n  switch (n) {\n    case 0 /* TypeOrder.NullValue */:\n    case 9007199254740991 /* TypeOrder.MaxValue */:\n      return !0;\n    case 1 /* TypeOrder.BooleanValue */:\n      return t.booleanValue === e.booleanValue;\n    case 4 /* TypeOrder.ServerTimestampValue */:\n      return Dt(t).isEqual(Dt(e));\n    case 3 /* TypeOrder.TimestampValue */:\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length)\n          // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        const n = At(t.timestampValue),\n          r = At(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n    case 5 /* TypeOrder.StringValue */:\n      return t.stringValue === e.stringValue;\n    case 6 /* TypeOrder.BlobValue */:\n      return function (t, e) {\n        return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n      }(t, e);\n    case 7 /* TypeOrder.RefValue */:\n      return t.referenceValue === e.referenceValue;\n    case 8 /* TypeOrder.GeoPointValue */:\n      return function (t, e) {\n        return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n      }(t, e);\n    case 2 /* TypeOrder.NumberValue */:\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          const n = Rt(t.doubleValue),\n            r = Rt(e.doubleValue);\n          return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n        }\n        return !1;\n      }(t, e);\n    case 9 /* TypeOrder.ArrayValue */:\n      return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n    case 10 /* TypeOrder.ObjectValue */:\n      return function (t, e) {\n        const n = t.mapValue.fields || {},\n          r = e.mapValue.fields || {};\n        if (bt(n) !== bt(r)) return !1;\n        for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */(t, e);\n    default:\n      return b();\n  }\n}\nfunction qt(t, e) {\n  return void 0 !== (t.values || []).find(t => St(t, e));\n}\nfunction Ot(t, e) {\n  if (t === e) return 0;\n  const n = xt(t),\n    r = xt(e);\n  if (n !== r) return _t(n, r);\n  switch (n) {\n    case 0 /* TypeOrder.NullValue */:\n    case 9007199254740991 /* TypeOrder.MaxValue */:\n      return 0;\n    case 1 /* TypeOrder.BooleanValue */:\n      return _t(t.booleanValue, e.booleanValue);\n    case 2 /* TypeOrder.NumberValue */:\n      return function (t, e) {\n        const n = Rt(t.integerValue || t.doubleValue),\n          r = Rt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 :\n        // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n    case 3 /* TypeOrder.TimestampValue */:\n      return kt(t.timestampValue, e.timestampValue);\n    case 4 /* TypeOrder.ServerTimestampValue */:\n      return kt(Dt(t), Dt(e));\n    case 5 /* TypeOrder.StringValue */:\n      return _t(t.stringValue, e.stringValue);\n    case 6 /* TypeOrder.BlobValue */:\n      return function (t, e) {\n        const n = Pt(t),\n          r = Pt(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n    case 7 /* TypeOrder.RefValue */:\n      return function (t, e) {\n        const n = t.split(\"/\"),\n          r = e.split(\"/\");\n        for (let t = 0; t < n.length && t < r.length; t++) {\n          const e = _t(n[t], r[t]);\n          if (0 !== e) return e;\n        }\n        return _t(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n    case 8 /* TypeOrder.GeoPointValue */:\n      return function (t, e) {\n        const n = _t(Rt(t.latitude), Rt(e.latitude));\n        if (0 !== n) return n;\n        return _t(Rt(t.longitude), Rt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n    case 9 /* TypeOrder.ArrayValue */:\n      return function (t, e) {\n        const n = t.values || [],\n          r = e.values || [];\n        for (let t = 0; t < n.length && t < r.length; ++t) {\n          const e = Ot(n[t], r[t]);\n          if (e) return e;\n        }\n        return _t(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n    case 10 /* TypeOrder.ObjectValue */:\n      return function (t, e) {\n        if (t === Ft && e === Ft) return 0;\n        if (t === Ft) return 1;\n        if (e === Ft) return -1;\n        const n = t.fields || {},\n          r = Object.keys(n),\n          s = e.fields || {},\n          i = Object.keys(s);\n        // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n        r.sort(), i.sort();\n        for (let t = 0; t < r.length && t < i.length; ++t) {\n          const e = _t(r[t], i[t]);\n          if (0 !== e) return e;\n          const o = Ot(n[r[t]], s[i[t]]);\n          if (0 !== o) return o;\n        }\n        return _t(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */(t.mapValue, e.mapValue);\n    default:\n      throw b();\n  }\n}\nfunction kt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n  const n = At(t),\n    r = At(e),\n    s = _t(n.seconds, r.seconds);\n  return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\nfunction Ct(t, e) {\n  return {\n    referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n  };\n}\n\n/** Returns true if `value` is an ArrayValue. */\nfunction Lt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */\nfunction Mt(t) {\n  return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */\nfunction Ut(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nfunction jt(t) {\n  return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */\nfunction Bt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n  if (t.mapValue) {\n    const e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, (t, n) => e.mapValue.fields[t] = Bt(n)), e;\n  }\n  if (t.arrayValue) {\n    const e = {\n      arrayValue: {\n        values: []\n      }\n    };\n    for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n    return e;\n  }\n  return Object.assign({}, t);\n}\nclass Qt {\n  constructor(t, e) {\n    this.position = t, this.inclusive = e;\n  }\n}\nfunction zt(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n  for (let n = 0; n < t.position.length; n++) {\n    if (!St(t.position[n], e.position[n])) return !1;\n  }\n  return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Wt {}\nclass Gt extends Wt {\n  constructor(t, e, n) {\n    super(), this.field = t, this.op = e, this.value = n;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(t, e, n) {\n    return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n  }\n  static createKeyFieldInFilter(t, e, n) {\n    return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    // Types do not have to match in NOT_EQUAL filters.\n    return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n    // Only compare types with matching backend order (such as double and int).\n  }\n\n  matchesComparison(t) {\n    switch (this.op) {\n      case \"<\" /* Operator.LESS_THAN */:\n        return t < 0;\n      case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */:\n        return t <= 0;\n      case \"==\" /* Operator.EQUAL */:\n        return 0 === t;\n      case \"!=\" /* Operator.NOT_EQUAL */:\n        return 0 !== t;\n      case \">\" /* Operator.GREATER_THAN */:\n        return t > 0;\n      case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */:\n        return t >= 0;\n      default:\n        return b();\n    }\n  }\n  isInequality() {\n    return [\"<\" /* Operator.LESS_THAN */, \"<=\" /* Operator.LESS_THAN_OR_EQUAL */, \">\" /* Operator.GREATER_THAN */, \">=\" /* Operator.GREATER_THAN_OR_EQUAL */, \"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */].indexOf(this.op) >= 0;\n  }\n  getFlattenedFilters() {\n    return [this];\n  }\n  getFilters() {\n    return [this];\n  }\n  getFirstInequalityField() {\n    return this.isInequality() ? this.field : null;\n  }\n}\nclass Kt extends Wt {\n  constructor(t, e) {\n    super(), this.filters = t, this.op = e, this.D = null;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(t, e) {\n    return new Kt(t, e);\n  }\n  matches(t) {\n    return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find(e => !e.matches(t)) : void 0 !== this.filters.find(e => e.matches(t));\n  }\n  getFlattenedFilters() {\n    return null !== this.D || (this.D = this.filters.reduce((t, e) => t.concat(e.getFlattenedFilters()), [])), this.D;\n  }\n  // Returns a mutable copy of `this.filters`\n  getFilters() {\n    return Object.assign([], this.filters);\n  }\n  getFirstInequalityField() {\n    const t = this.F(t => t.isInequality());\n    return null !== t ? t.field : null;\n  }\n  // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n  // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n  // predicate.\n  F(t) {\n    for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n    return null;\n  }\n}\nfunction Yt(t, e) {\n  return t instanceof Gt ? function (t, e) {\n    return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n  }(t, e) : t instanceof Kt ? function (t, e) {\n    if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n      return t.filters.reduce((t, n, r) => t && Yt(n, e.filters[r]), !0);\n    }\n    return !1;\n  }\n  /** Filter that matches on key fields (i.e. '__name__'). */(t, e) : void b();\n}\nclass Ht extends Gt {\n  constructor(t, e, n) {\n    super(t, e, n), this.key = rt.fromName(n.referenceValue);\n  }\n  matches(t) {\n    const e = rt.comparator(t.key, this.key);\n    return this.matchesComparison(e);\n  }\n}\n\n/** Filter that matches on key fields within an array. */\nclass Jt extends Gt {\n  constructor(t, e) {\n    super(t, \"in\" /* Operator.IN */, e), this.keys = Zt(\"in\" /* Operator.IN */, e);\n  }\n  matches(t) {\n    return this.keys.some(e => e.isEqual(t.key));\n  }\n}\n\n/** Filter that matches on key fields not present within an array. */\nclass Xt extends Gt {\n  constructor(t, e) {\n    super(t, \"not-in\" /* Operator.NOT_IN */, e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */, e);\n  }\n  matches(t) {\n    return !this.keys.some(e => e.isEqual(t.key));\n  }\n}\nfunction Zt(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(t => rt.fromName(t.referenceValue));\n}\n\n/** A Filter that implements the array-contains operator. */\nclass te extends Gt {\n  constructor(t, e) {\n    super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return Lt(e) && qt(e.arrayValue, this.value);\n  }\n}\n\n/** A Filter that implements the IN operator. */\nclass ee extends Gt {\n  constructor(t, e) {\n    super(t, \"in\" /* Operator.IN */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return null !== e && qt(this.value.arrayValue, e);\n  }\n}\n\n/** A Filter that implements the not-in operator. */\nclass ne extends Gt {\n  constructor(t, e) {\n    super(t, \"not-in\" /* Operator.NOT_IN */, e);\n  }\n  matches(t) {\n    if (qt(this.value.arrayValue, {\n      nullValue: \"NULL_VALUE\"\n    })) return !1;\n    const e = t.data.field(this.field);\n    return null !== e && !qt(this.value.arrayValue, e);\n  }\n}\n\n/** A Filter that implements the array-contains-any operator. */\nclass re extends Gt {\n  constructor(t, e) {\n    super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some(t => qt(this.value.arrayValue, t));\n  }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nclass se {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n    this.field = t, this.dir = e;\n  }\n}\nfunction ie(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nclass oe {\n  constructor(t) {\n    this.timestamp = t;\n  }\n  static fromTimestamp(t) {\n    return new oe(t);\n  }\n  static min() {\n    return new oe(new Vt(0, 0));\n  }\n  static max() {\n    return new oe(new Vt(253402300799, 999999999));\n  }\n  compareTo(t) {\n    return this.timestamp._compareTo(t.timestamp);\n  }\n  isEqual(t) {\n    return this.timestamp.isEqual(t.timestamp);\n  }\n  /** Returns a number representation of the version for use in spec tests. */\n  toMicroseconds() {\n    // Convert to microseconds.\n    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n  }\n  toString() {\n    return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n  }\n  toTimestamp() {\n    return this.timestamp;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n  constructor(t, e) {\n    this.comparator = t, this.root = e || ae.EMPTY;\n  }\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  insert(t, e) {\n    return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n  }\n  // Returns a copy of the map, with the specified key removed.\n  remove(t) {\n    return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n  }\n  // Returns the value of the node with the given key, or null.\n  get(t) {\n    let e = this.root;\n    for (; !e.isEmpty();) {\n      const n = this.comparator(t, e.key);\n      if (0 === n) return e.value;\n      n < 0 ? e = e.left : n > 0 && (e = e.right);\n    }\n    return null;\n  }\n  // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n  indexOf(t) {\n    // Number of nodes that were pruned when descending right\n    let e = 0,\n      n = this.root;\n    for (; !n.isEmpty();) {\n      const r = this.comparator(t, n.key);\n      if (0 === r) return e + n.left.size;\n      r < 0 ? n = n.left : (\n      // Count all nodes left of the node plus the node itself\n      e += n.left.size + 1, n = n.right);\n    }\n    // Node not found\n    return -1;\n  }\n  isEmpty() {\n    return this.root.isEmpty();\n  }\n  // Returns the total number of nodes in the map.\n  get size() {\n    return this.root.size;\n  }\n  // Returns the minimum key in the map.\n  minKey() {\n    return this.root.minKey();\n  }\n  // Returns the maximum key in the map.\n  maxKey() {\n    return this.root.maxKey();\n  }\n  // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal(t) {\n    return this.root.inorderTraversal(t);\n  }\n  forEach(t) {\n    this.inorderTraversal((e, n) => (t(e, n), !1));\n  }\n  toString() {\n    const t = [];\n    return this.inorderTraversal((e, n) => (t.push(`${e}:${n}`), !1)), `{${t.join(\", \")}}`;\n  }\n  // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal(t) {\n    return this.root.reverseTraversal(t);\n  }\n  // Returns an iterator over the SortedMap.\n  getIterator() {\n    return new ce(this.root, null, this.comparator, !1);\n  }\n  getIteratorFrom(t) {\n    return new ce(this.root, t, this.comparator, !1);\n  }\n  getReverseIterator() {\n    return new ce(this.root, null, this.comparator, !0);\n  }\n  getReverseIteratorFrom(t) {\n    return new ce(this.root, t, this.comparator, !0);\n  }\n}\n\n// end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n  constructor(t, e, n, r) {\n    this.isReverse = r, this.nodeStack = [];\n    let s = 1;\n    for (; !t.isEmpty();) if (s = e ? n(t.key, e) : 1,\n    // flip the comparison if we're going in reverse\n    e && r && (s *= -1), s < 0)\n      // This node is less than our start key. ignore it\n      t = this.isReverse ? t.left : t.right;else {\n      if (0 === s) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(t);\n        break;\n      }\n      // This node is greater than our start key, add it to the stack and move\n      // to the next one\n      this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n    }\n  }\n  getNext() {\n    let t = this.nodeStack.pop();\n    const e = {\n      key: t.key,\n      value: t.value\n    };\n    if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;\n    return e;\n  }\n  hasNext() {\n    return this.nodeStack.length > 0;\n  }\n  peek() {\n    if (0 === this.nodeStack.length) return null;\n    const t = this.nodeStack[this.nodeStack.length - 1];\n    return {\n      key: t.key,\n      value: t.value\n    };\n  }\n}\n\n// end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n  constructor(t, e, n, r, s) {\n    this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  }\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  copy(t, e, n, r, s) {\n    return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n  }\n  isEmpty() {\n    return !1;\n  }\n  // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal(t) {\n    return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n  }\n  // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal(t) {\n    return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n  }\n  // Returns the minimum node in the tree.\n  min() {\n    return this.left.isEmpty() ? this : this.left.min();\n  }\n  // Returns the maximum key in the tree.\n  minKey() {\n    return this.min().key;\n  }\n  // Returns the maximum key in the tree.\n  maxKey() {\n    return this.right.isEmpty() ? this.key : this.right.maxKey();\n  }\n  // Returns new tree, with the key/value added.\n  insert(t, e, n) {\n    let r = this;\n    const s = n(t, r.key);\n    return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n  }\n  removeMin() {\n    if (this.left.isEmpty()) return ae.EMPTY;\n    let t = this;\n    return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n  }\n  // Returns new tree, with the specified item removed.\n  remove(t, e) {\n    let n,\n      r = this;\n    if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n      if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n        if (r.right.isEmpty()) return ae.EMPTY;\n        n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n      }\n      r = r.copy(null, null, null, null, r.right.remove(t, e));\n    }\n    return r.fixUp();\n  }\n  isRed() {\n    return this.color;\n  }\n  // Returns new tree after performing any needed rotations.\n  fixUp() {\n    let t = this;\n    return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n  }\n  moveRedLeft() {\n    let t = this.colorFlip();\n    return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n  }\n  moveRedRight() {\n    let t = this.colorFlip();\n    return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n  }\n  rotateLeft() {\n    const t = this.copy(null, null, ae.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, t, null);\n  }\n  rotateRight() {\n    const t = this.copy(null, null, ae.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, t);\n  }\n  colorFlip() {\n    const t = this.left.copy(null, null, !this.left.color, null, null),\n      e = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, t, e);\n  }\n  // For testing.\n  checkMaxDepth() {\n    const t = this.check();\n    return Math.pow(2, t) <= this.size + 1;\n  }\n  // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n  check() {\n    if (this.isRed() && this.left.isRed()) throw b();\n    if (this.right.isRed()) throw b();\n    const t = this.left.check();\n    if (t !== this.right.check()) throw b();\n    return t + (this.isRed() ? 0 : 1);\n  }\n}\n\n// end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new\n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n  constructor() {\n    this.size = 0;\n  }\n  get key() {\n    throw b();\n  }\n  get value() {\n    throw b();\n  }\n  get color() {\n    throw b();\n  }\n  get left() {\n    throw b();\n  }\n  get right() {\n    throw b();\n  }\n  // Returns a copy of the current node.\n  copy(t, e, n, r, s) {\n    return this;\n  }\n  // Returns a copy of the tree, with the specified key/value added.\n  insert(t, e, n) {\n    return new ae(t, e);\n  }\n  // Returns a copy of the tree, with the specified key removed.\n  remove(t, e) {\n    return this;\n  }\n  isEmpty() {\n    return !0;\n  }\n  inorderTraversal(t) {\n    return !1;\n  }\n  reverseTraversal(t) {\n    return !1;\n  }\n  minKey() {\n    return null;\n  }\n  maxKey() {\n    return null;\n  }\n  isRed() {\n    return !1;\n  }\n  // For testing.\n  checkMaxDepth() {\n    return !0;\n  }\n  check() {\n    return 0;\n  }\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n  constructor(t) {\n    this.comparator = t, this.data = new ue(this.comparator);\n  }\n  has(t) {\n    return null !== this.data.get(t);\n  }\n  first() {\n    return this.data.minKey();\n  }\n  last() {\n    return this.data.maxKey();\n  }\n  get size() {\n    return this.data.size;\n  }\n  indexOf(t) {\n    return this.data.indexOf(t);\n  }\n  /** Iterates elements in order defined by \"comparator\" */\n  forEach(t) {\n    this.data.inorderTraversal((e, n) => (t(e), !1));\n  }\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  forEachInRange(t, e) {\n    const n = this.data.getIteratorFrom(t[0]);\n    for (; n.hasNext();) {\n      const r = n.getNext();\n      if (this.comparator(r.key, t[1]) >= 0) return;\n      e(r.key);\n    }\n  }\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n  forEachWhile(t, e) {\n    let n;\n    for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n      if (!t(n.getNext().key)) return;\n    }\n  }\n  /** Finds the least element greater than or equal to `elem`. */\n  firstAfterOrEqual(t) {\n    const e = this.data.getIteratorFrom(t);\n    return e.hasNext() ? e.getNext().key : null;\n  }\n  getIterator() {\n    return new le(this.data.getIterator());\n  }\n  getIteratorFrom(t) {\n    return new le(this.data.getIteratorFrom(t));\n  }\n  /** Inserts or updates an element */\n  add(t) {\n    return this.copy(this.data.remove(t).insert(t, !0));\n  }\n  /** Deletes an element */\n  delete(t) {\n    return this.has(t) ? this.copy(this.data.remove(t)) : this;\n  }\n  isEmpty() {\n    return this.data.isEmpty();\n  }\n  unionWith(t) {\n    let e = this;\n    // Make sure `result` always refers to the larger one of the two sets.\n    return e.size < t.size && (e = t, t = this), t.forEach(t => {\n      e = e.add(t);\n    }), e;\n  }\n  isEqual(t) {\n    if (!(t instanceof he)) return !1;\n    if (this.size !== t.size) return !1;\n    const e = this.data.getIterator(),\n      n = t.data.getIterator();\n    for (; e.hasNext();) {\n      const t = e.getNext().key,\n        r = n.getNext().key;\n      if (0 !== this.comparator(t, r)) return !1;\n    }\n    return !0;\n  }\n  toArray() {\n    const t = [];\n    return this.forEach(e => {\n      t.push(e);\n    }), t;\n  }\n  toString() {\n    const t = [];\n    return this.forEach(e => t.push(e)), \"SortedSet(\" + t.toString() + \")\";\n  }\n  copy(t) {\n    const e = new he(this.comparator);\n    return e.data = t, e;\n  }\n}\nclass le {\n  constructor(t) {\n    this.iter = t;\n  }\n  getNext() {\n    return this.iter.getNext().key;\n  }\n  hasNext() {\n    return this.iter.hasNext();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass fe {\n  constructor(t) {\n    this.fields = t,\n    // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n  static empty() {\n    return new fe([]);\n  }\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n  unionWith(t) {\n    let e = new he(nt.comparator);\n    for (const t of this.fields) e = e.add(t);\n    for (const n of t) e = e.add(n);\n    return new fe(e.toArray());\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n  covers(t) {\n    for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n    return !1;\n  }\n  isEqual(t) {\n    return vt(this.fields, t.fields, (t, e) => t.isEqual(e));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\nclass de {\n  constructor(t) {\n    this.value = t;\n  }\n  static empty() {\n    return new de({\n      mapValue: {}\n    });\n  }\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n  field(t) {\n    if (t.isEmpty()) return this.value;\n    {\n      let e = this.value;\n      for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !jt(e)) return null;\n      return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n    }\n  }\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n  set(t, e) {\n    this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n  }\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n  setAll(t) {\n    let e = nt.emptyPath(),\n      n = {},\n      r = [];\n    t.forEach((t, s) => {\n      if (!e.isImmediateParentOf(s)) {\n        // Insert the accumulated changes at this parent location\n        const t = this.getFieldsMap(e);\n        this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n      }\n      t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n    });\n    const s = this.getFieldsMap(e);\n    this.applyChanges(s, n, r);\n  }\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n  delete(t) {\n    const e = this.field(t.popLast());\n    jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n  }\n  isEqual(t) {\n    return St(this.value, t.value);\n  }\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n  getFieldsMap(t) {\n    let e = this.value;\n    e.mapValue.fields || (e.mapValue = {\n      fields: {}\n    });\n    for (let n = 0; n < t.length; ++n) {\n      let r = e.mapValue.fields[t.get(n)];\n      jt(r) && r.mapValue.fields || (r = {\n        mapValue: {\n          fields: {}\n        }\n      }, e.mapValue.fields[t.get(n)] = r), e = r;\n    }\n    return e.mapValue.fields;\n  }\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n  applyChanges(t, e, n) {\n    Et(e, (e, n) => t[e] = n);\n    for (const e of n) delete t[e];\n  }\n  clone() {\n    return new de(Bt(this.value));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nclass we {\n  constructor(t, e, n, r, s, i, o) {\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, this.data = i, this.documentState = o;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n  static newInvalidDocument(t) {\n    return new we(t, 0 /* DocumentType.INVALID */, /* version */oe.min(), /* readTime */oe.min(), /* createTime */oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n  }\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n  static newFoundDocument(t, e, n, r) {\n    return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */, /* version */e, /* readTime */oe.min(), /* createTime */n, r, 0 /* DocumentState.SYNCED */);\n  }\n  /** Creates a new document that is known to not exist at the given version. */\n  static newNoDocument(t, e) {\n    return new we(t, 2 /* DocumentType.NO_DOCUMENT */, /* version */e, /* readTime */oe.min(), /* createTime */oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n  }\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  static newUnknownDocument(t, e) {\n    return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */, /* version */e, /* readTime */oe.min(), /* createTime */oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n  }\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n  convertToFoundDocument(t, e) {\n    // If a document is switching state from being an invalid or deleted\n    // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n    // update from Watch or due to applying a local set mutation on top\n    // of a deleted document, our best guess about its createTime would be the\n    // version at which the document transitioned to a FOUND_DOCUMENT.\n    return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */, this.data = e, this.documentState = 0 /* DocumentState.SYNCED */, this;\n  }\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n  convertToNoDocument(t) {\n    return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */, this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */, this;\n  }\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  convertToUnknownDocument(t) {\n    return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */, this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;\n  }\n  setHasCommittedMutations() {\n    return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;\n  }\n  setHasLocalMutations() {\n    return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */, this.version = oe.min(), this;\n  }\n  setReadTime(t) {\n    return this.readTime = t, this;\n  }\n  get hasLocalMutations() {\n    return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n  }\n  get hasCommittedMutations() {\n    return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n  }\n  get hasPendingWrites() {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n  isValidDocument() {\n    return 0 /* DocumentType.INVALID */ !== this.documentType;\n  }\n  isFoundDocument() {\n    return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n  }\n  isNoDocument() {\n    return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n  }\n  isUnknownDocument() {\n    return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n  }\n  isEqual(t) {\n    return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n  }\n  mutableCopy() {\n    return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n  }\n  toString() {\n    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n  }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.S = null;\n  }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nfunction pe(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null,\n    // The corresponding `Target` of this `Query` instance.\n    this.O = null, this.startAt, this.endAt;\n  }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */\nfunction ge(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\nfunction _e(t) {\n  for (const e of t.filters) {\n    const t = e.getFirstInequalityField();\n    if (null !== t) return t;\n  }\n  return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n  return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\nfunction be(t) {\n  const e = I(t);\n  if (null === e.q) {\n    e.q = [];\n    const t = _e(e),\n      n = ge(e);\n    if (null !== t && null === n)\n      // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */));else {\n      let t = !1;\n      for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n      if (!t) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n        e.q.push(new se(nt.keyField(), t));\n      }\n    }\n  }\n  return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\nfunction Ee(t) {\n  const e = I(t);\n  if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    const t = [];\n    for (const n of be(e)) {\n      const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n      t.push(new se(n.field, e));\n    }\n    // We need to swap the cursors to match the now-flipped query ordering.\n    const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null,\n      r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n    // Now return as a LimitType.First query.\n    e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n  }\n  return e.O;\n}\nfunction Ie(t, e) {\n  e.getFirstInequalityField(), _e(t);\n  const n = t.filters.concat([e]);\n  return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\nfunction Te(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n  }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.k) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n    return {\n      doubleValue: lt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */\nclass Re {\n  constructor() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this._ = void 0;\n  }\n}\n\n/** Transforms a value into a server-generated timestamp. */\nclass Pe extends Re {}\n\n/** Transforms an array value via a union operation. */\nclass Ve extends Re {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n}\n\n/** Transforms an array value via a remove operation. */\nclass $e extends Re {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nclass Ne extends Re {\n  constructor(t, e) {\n    super(), this.C = t, this.L = e;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */\nclass De {\n  constructor(t, e) {\n    this.field = t, this.transform = e;\n  }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nclass Fe {\n  constructor(t, e) {\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n  static none() {\n    return new Fe();\n  }\n  /** Creates a new Precondition with an exists flag. */\n  static exists(t) {\n    return new Fe(void 0, t);\n  }\n  /** Creates a new Precondition based on a version a document exists at. */\n  static updateTime(t) {\n    return new Fe(t);\n  }\n  /** Returns whether this Precondition is empty. */\n  get isNone() {\n    return void 0 === this.updateTime && void 0 === this.exists;\n  }\n  isEqual(t) {\n    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n  }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nclass xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nclass Se extends xe {\n  constructor(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, this.type = 0 /* MutationType.Set */;\n  }\n\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nclass qe extends xe {\n  constructor(t, e, n, r) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n  }\n\n  getFieldMask() {\n    return this.fieldMask;\n  }\n}\n\n/** A mutation that deletes the document at the given key. */\nclass Oe extends xe {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */, this.fieldTransforms = [];\n  }\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nclass ke extends xe {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */, this.fieldTransforms = [];\n  }\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Ce = (() => {\n    const t = {\n      asc: \"ASCENDING\",\n      desc: \"DESCENDING\"\n    };\n    return t;\n  })(),\n  Le = (() => {\n    const t = {\n      \"<\": \"LESS_THAN\",\n      \"<=\": \"LESS_THAN_OR_EQUAL\",\n      \">\": \"GREATER_THAN\",\n      \">=\": \"GREATER_THAN_OR_EQUAL\",\n      \"==\": \"EQUAL\",\n      \"!=\": \"NOT_EQUAL\",\n      \"array-contains\": \"ARRAY_CONTAINS\",\n      in: \"IN\",\n      \"not-in\": \"NOT_IN\",\n      \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n  })(),\n  Me = (() => {\n    const t = {\n      and: \"AND\",\n      or: \"OR\"\n    };\n    return t;\n  })();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n  constructor(t, e) {\n    this.databaseId = t, this.k = e;\n  }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n  if (t.k) {\n    return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n  }\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n  return t.k ? e.toBase64() : e.toUint8Array();\n}\nfunction Qe(t, e) {\n  return je(t, e.toTimestamp());\n}\nfunction ze(t) {\n  return E(!!t), oe.fromTimestamp(function (t) {\n    const e = At(t);\n    return new Vt(e.seconds, e.nanos);\n  }(t));\n}\nfunction We(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\nfunction Ge(t, e) {\n  return We(t.databaseId, e.path);\n}\nfunction Ke(t, e) {\n  const n = function (t) {\n    const e = tt.fromString(t);\n    return E(cn(e)), e;\n  }(e);\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction Ye(t, e) {\n  return We(t.databaseId, e);\n}\nfunction He(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\nfunction Je(t, e, n) {\n  return {\n    name: Ge(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\nfunction Xe(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    const n = Ke(t, e.found.name),\n      r = ze(e.found.updateTime),\n      s = e.found.createTime ? ze(e.found.createTime) : oe.min(),\n      i = new de({\n        mapValue: {\n          fields: e.found.fields\n        }\n      });\n    return we.newFoundDocument(n, r, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    const n = Ke(t, e.missing),\n      r = ze(e.readTime);\n    return we.newNoDocument(n, r);\n  }(t, e) : b();\n}\nfunction Ze(t, e) {\n  let n;\n  if (e instanceof Se) n = {\n    update: Je(t, e.key, e.value)\n  };else if (e instanceof Oe) n = {\n    delete: Ge(t, e.key)\n  };else if (e instanceof qe) n = {\n    update: Je(t, e.key, e.data),\n    updateMask: un(e.fieldMask)\n  };else {\n    if (!(e instanceof ke)) return b();\n    n = {\n      verify: Ge(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(t => function (t, e) {\n    const n = e.transform;\n    if (n instanceof Pe) return {\n      fieldPath: e.field.canonicalString(),\n      setToServerValue: \"REQUEST_TIME\"\n    };\n    if (n instanceof Ve) return {\n      fieldPath: e.field.canonicalString(),\n      appendMissingElements: {\n        values: n.elements\n      }\n    };\n    if (n instanceof $e) return {\n      fieldPath: e.field.canonicalString(),\n      removeAllFromArray: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Ne) return {\n      fieldPath: e.field.canonicalString(),\n      increment: n.L\n    };\n    throw b();\n  }(0, t))), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Qe(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\nfunction tn(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const n = {\n      structuredQuery: {}\n    },\n    r = e.path;\n  null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n  const s = function (t) {\n    if (0 === t.length) return;\n    return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n  }(e.filters);\n  s && (n.structuredQuery.where = s);\n  const i = function (t) {\n    if (0 === t.length) return;\n    return t.map(t =>\n    // visible for testing\n    function (t) {\n      return {\n        field: sn(t.field),\n        direction: en(t.dir)\n      };\n    }\n    // visible for testing\n    (t));\n  }(e.orderBy);\n  i && (n.structuredQuery.orderBy = i);\n  const o = function (t, e) {\n    return t.k || ht(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  }\n  // visible for testing\n  (e.endAt)), n;\n}\nfunction en(t) {\n  return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n  return Le[t];\n}\nfunction rn(t) {\n  return Me[t];\n}\nfunction sn(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\nfunction on(t) {\n  return t instanceof Gt ? function (t) {\n    if (\"==\" /* Operator.EQUAL */ === t.op) {\n      if (Ut(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NAN\"\n        }\n      };\n      if (Mt(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NULL\"\n        }\n      };\n    } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n      if (Ut(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NOT_NAN\"\n        }\n      };\n      if (Mt(t.value)) return {\n        unaryFilter: {\n          field: sn(t.field),\n          op: \"IS_NOT_NULL\"\n        }\n      };\n    }\n    return {\n      fieldFilter: {\n        field: sn(t.field),\n        op: nn(t.op),\n        value: t.value\n      }\n    };\n  }(t) : t instanceof Kt ? function (t) {\n    const e = t.getFilters().map(t => on(t));\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: rn(t.op),\n        filters: e\n      }\n    };\n  }(t) : b();\n}\nfunction un(t) {\n  const e = [];\n  return t.fields.forEach(t => e.push(t.canonicalString())), {\n    fieldPaths: e\n  };\n}\nfunction cn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction an(t) {\n  return new Ue(t, /* useProto3Json= */!0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n  constructor(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n    this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, /** The last backoff attempt, as epoch milliseconds. */\n    this.K = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  reset() {\n    this.W = 0;\n  }\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n  Y() {\n    this.W = this.B;\n  }\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n  H(t) {\n    // Cancel any pending backoff operation.\n    this.cancel();\n    // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n    const e = Math.floor(this.W + this.J()),\n      n = Math.max(0, Date.now() - this.K),\n      r = Math.max(0, e - n);\n    // Guard against lastAttemptTime being in the future due to a clock change.\n    r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), this.G = this.M.enqueueAfterDelay(this.timerId, r, () => (this.K = Date.now(), t())),\n    // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n  }\n  X() {\n    null !== this.G && (this.G.skipDelay(), this.G = null);\n  }\n  cancel() {\n    null !== this.G && (this.G.cancel(), this.G = null);\n  }\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  J() {\n    return (Math.random() - .5) * this.W;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n  constructor(t, e, n, r) {\n    super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, this.C = r, this.Z = !1;\n  }\n  tt() {\n    if (this.Z) throw new U(S, \"The client has already been terminated.\");\n  }\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n  I(t, e, n) {\n    return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref => {\n      let [r, s] = _ref;\n      return this.connection.I(t, e, n, r, s);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n  P(t, e, n, r) {\n    return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref2 => {\n      let [s, i] = _ref2;\n      return this.connection.P(t, e, n, s, i, r);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  terminate() {\n    this.Z = !0;\n  }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n  const n = I(t),\n    r = He(n.C) + \"/documents\",\n    s = {\n      writes: e.map(t => Ze(n.C, t))\n    };\n  await n.I(\"Commit\", r, s);\n}\nasync function dn(t, e) {\n  const n = I(t),\n    r = He(n.C) + \"/documents\",\n    s = {\n      documents: e.map(t => Ge(n.C, t))\n    },\n    i = await n.P(\"BatchGetDocuments\", r, s, e.length),\n    o = new Map();\n  i.forEach(t => {\n    const e = Xe(n.C, t);\n    o.set(e.key.toString(), e);\n  });\n  const u = [];\n  return e.forEach(t => {\n    const e = o.get(t.toString());\n    E(!!e), u.push(e);\n  }), u;\n}\nasync function wn(t, e) {\n  const n = I(t),\n    r = tn(n.C, Ee(e));\n  return (await n.P(\"RunQuery\", r.parent, {\n    structuredQuery: r.structuredQuery\n  })).filter(t => !!t.document).map(t => function (t, e, n) {\n    const r = Ke(t, e.name),\n      s = ze(e.updateTime),\n      i = e.createTime ? ze(e.createTime) : oe.min(),\n      o = new de({\n        mapValue: {\n          fields: e.fields\n        }\n      }),\n      u = we.newFoundDocument(r, s, i, o);\n    return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n  }(n.C, t.document, void 0));\n}\nasync function mn(t, e) {\n  const n = I(t),\n    r = function (t, e) {\n      const n = tn(t, e);\n      return {\n        structuredAggregationQuery: {\n          aggregations: [{\n            count: {},\n            alias: \"count_alias\"\n          }],\n          structuredQuery: n.structuredQuery\n        },\n        parent: n.parent\n      };\n    }(n.C, Ee(e)),\n    s = r.parent;\n  n.connection.v || delete r.parent;\n  return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/1)).filter(t => !!t.result).map(t => t.result.aggregateFields);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst pn = new Map();\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n  if (!pn.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n    const i = function (t) {\n        return new pt(t, fetch.bind(null));\n      }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n      o = an(t._databaseId),\n      u = function (t, e, n, r) {\n        return new ln(t, e, n, r);\n      }(t._authCredentials, t._appCheckCredentials, i, o);\n    pn.set(t, u);\n  }\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n  constructor(t) {\n    var e;\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n  isEqual(t) {\n    return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nclass _n {\n  /** @hideconstructor */\n  constructor(t, e, n, r) {\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  get app() {\n    if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n    return this._app;\n  }\n  get _initialized() {\n    return this._settingsFrozen;\n  }\n  get _terminated() {\n    return void 0 !== this._terminateTask;\n  }\n  _setSettings(t) {\n    if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n    this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n      if (!t) return new Q();\n      switch (t.type) {\n        case \"gapi\":\n          const e = t.client;\n          return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n        case \"provider\":\n          return t.client;\n        default:\n          throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n      }\n    }(t.credentials));\n  }\n  _getSettings() {\n    return this._settings;\n  }\n  _freezeSettings() {\n    return this._settingsFrozen = !0, this._settings;\n  }\n  _delete() {\n    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n  }\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  toJSON() {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n  _terminate() {\n    return function (t) {\n      const e = pn.get(t);\n      e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n    }(this), Promise.resolve();\n  }\n}\nfunction vn(t, e, n) {\n  n || (n = \"(default)\");\n  const r = _getProvider(t, \"firestore/lite\");\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\nfunction bn(e, n) {\n  const r = \"object\" == typeof e ? e : getApp(),\n    s = \"string\" == typeof e ? e : n || \"(default)\",\n    i = _getProvider(r, \"firestore/lite\").getImmediate({\n      identifier: s\n    });\n  if (!i._initialized) {\n    const t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && En(i, ...t);\n  }\n  return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nfunction En(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n  const i = (t = ct(t, _n))._getSettings();\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: `${e}:${n}`,\n    ssl: !1\n  })), r.mockUserToken) {\n    let e, n;\n    if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      n = new d(i);\n    }\n    t._authCredentials = new z(new B(e, n));\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nfunction In(t) {\n  return t = ct(t, _n), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n  constructor() {\n    /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateField\";\n  }\n}\n\n/**\n * The results of executing an aggregation query.\n */\nclass An {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._data = e, /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n  data() {\n    return this._data;\n  }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */\nclass Rn {\n  constructor(t, e, n) {\n    this.query = t, this.datastore = e, this.userDataWriter = n;\n  }\n  run() {\n    return mn(this.datastore, this.query._query).then(t => {\n      E(void 0 !== t[0]);\n      const e = Object.entries(t[0]).filter(_ref3 => {\n        let [t, e] = _ref3;\n        return \"count_alias\" === t;\n      }).map(_ref4 => {\n        let [t, e] = _ref4;\n        return this.userDataWriter.convertValue(e);\n      })[0];\n      return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n        count: e\n      }));\n    });\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass Pn {\n  /** @hideconstructor */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._key = n, /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n  get _path() {\n    return this._key.path;\n  }\n  /**\n   * The document's identifier within its collection.\n   */\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n  get path() {\n    return this._key.path.canonicalString();\n  }\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n  get parent() {\n    return new $n(this.firestore, this.converter, this._key.path.popLast());\n  }\n  withConverter(t) {\n    return new Pn(this.firestore, t, this._key);\n  }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nclass Vn {\n  // This is the lite version of the Query class in the main SDK.\n  /** @hideconstructor protected */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._query = n, /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n  withConverter(t) {\n    return new Vn(this.firestore, t, this._query);\n  }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\nclass $n extends Vn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    super(t, e, new ye(n)), this._path = n, /** The type of this Firestore reference. */\n    this.type = \"collection\";\n  }\n  /** The collection's identifier. */\n  get id() {\n    return this._query.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n  get path() {\n    return this._query.path.canonicalString();\n  }\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n  get parent() {\n    const t = this._path.popLast();\n    return t.isEmpty() ? null : new Pn(this.firestore, /* converter= */null, new rt(t));\n  }\n  withConverter(t) {\n    return new $n(this.firestore, t, this._path);\n  }\n}\nfunction Nn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof _n) {\n    const r = tt.fromString(e, ...n);\n    return ot(r), new $n(t, /* converter= */null, r);\n  }\n  {\n    if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    const r = t._path.child(tt.fromString(e, ...n));\n    return ot(r), new $n(t.firestore, /* converter= */null, r);\n  }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nfunction Dn(t, e) {\n  if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n  return new Vn(t, /* converter= */null, function (t) {\n    return new ye(tt.emptyPath(), t);\n  }(e));\n}\nfunction Fn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n  if (t = getModularInstance(t),\n  // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n    const r = tt.fromString(e, ...n);\n    return it(r), new Pn(t, /* converter= */null, new rt(r));\n  }\n  {\n    if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    const r = t._path.child(tt.fromString(e, ...n));\n    return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n  }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction xn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction Sn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Vn && e instanceof Vn && t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */\nclass qn {\n  /** @hideconstructor */\n  constructor(t) {\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n  static fromBase64String(t) {\n    try {\n      return new qn(It.fromBase64String(t));\n    } catch (t) {\n      throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n    }\n  }\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n  static fromUint8Array(t) {\n    return new qn(It.fromUint8Array(t));\n  }\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n  toBase64() {\n    return this._byteString.toBase64();\n  }\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n  toUint8Array() {\n    return this._byteString.toUint8Array();\n  }\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n  toString() {\n    return \"Bytes(base64: \" + this.toBase64() + \")\";\n  }\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._byteString.isEqual(t._byteString);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nclass On {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor() {\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n    for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._internalPath.isEqual(t._internalPath);\n  }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nfunction kn() {\n  return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nclass Cn {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(t) {\n    this._methodName = t;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nclass Ln {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(t, e) {\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n  get latitude() {\n    return this._lat;\n  }\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n  get longitude() {\n    return this._long;\n  }\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._lat === t._lat && this._long === t._long;\n  }\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n  toJSON() {\n    return {\n      latitude: this._lat,\n      longitude: this._long\n    };\n  }\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n  _compareTo(t) {\n    return _t(this._lat, t._lat) || _t(this._long, t._long);\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */\nclass Un {\n  constructor(t, e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  toMutation(t, e) {\n    return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n  }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nclass jn {\n  constructor(t,\n  // The fieldMask does not include document transforms.\n  e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  toMutation(t, e) {\n    return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n  }\n}\nfunction Bn(t) {\n  switch (t) {\n    case 0 /* UserDataSource.Set */:\n    // fall through\n    case 2 /* UserDataSource.MergeSet */:\n    // fall through\n    case 1 /* UserDataSource.Update */:\n      return !0;\n    case 3 /* UserDataSource.Argument */:\n    case 4 /* UserDataSource.ArrayArgument */:\n      return !1;\n    default:\n      throw b();\n  }\n}\n\n/** A \"context\" object passed around while parsing user data. */\nclass Qn {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(t, e, n, r, s, i) {\n    this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r,\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n  get path() {\n    return this.settings.path;\n  }\n  get nt() {\n    return this.settings.nt;\n  }\n  /** Returns a new context with the specified settings overwritten. */\n  rt(t) {\n    return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n  }\n  st(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n      r = this.rt({\n        path: n,\n        it: !1\n      });\n    return r.ot(t), r;\n  }\n  ut(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n      r = this.rt({\n        path: n,\n        it: !1\n      });\n    return r.et(), r;\n  }\n  ct(t) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.rt({\n      path: void 0,\n      it: !0\n    });\n  }\n  at(t) {\n    return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n  }\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  contains(t) {\n    return void 0 !== this.fieldMask.find(e => t.isPrefixOf(e)) || void 0 !== this.fieldTransforms.find(e => t.isPrefixOf(e.field));\n  }\n  et() {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n  }\n  ot(t) {\n    if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n    if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n  }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nclass zn {\n  constructor(t, e, n) {\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n  }\n  /** Creates a new top-level parse context. */\n  ft(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    return new Qn({\n      nt: t,\n      methodName: e,\n      lt: n,\n      path: nt.emptyPath(),\n      it: !1,\n      ht: r\n    }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n  }\n}\nfunction Wn(t) {\n  const e = t._freezeSettings(),\n    n = an(t._databaseId);\n  return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */\nfunction Gn(t, e, n, r, s) {\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */, e, n, s);\n  or(\"Data must be an object, but it was:\", o, r);\n  const u = sr(r, o);\n  let c, a;\n  if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    const t = [];\n    for (const r of i.mergeFields) {\n      const s = ur(e, r, n);\n      if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n      lr(t, s) || t.push(s);\n    }\n    c = new fe(t), a = o.fieldTransforms.filter(t => c.covers(t.field));\n  } else c = null, a = o.fieldTransforms;\n  return new Un(new de(u), c, a);\n}\nclass Kn extends Cn {\n  _toFieldTransform(t) {\n    if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n    // No transform to add for a delete, but we need to add it to our\n    // fieldMask so it gets deleted.\n    return t.fieldMask.push(t.path), null;\n  }\n  isEqual(t) {\n    return t instanceof Kn;\n  }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction Yn(t, e, n) {\n  return new Qn({\n    nt: 3 /* UserDataSource.Argument */,\n    lt: e.settings.lt,\n    methodName: t._methodName,\n    it: n\n  }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\nclass Hn extends Cn {\n  _toFieldTransform(t) {\n    return new De(t.path, new Pe());\n  }\n  isEqual(t) {\n    return t instanceof Hn;\n  }\n}\nclass Jn extends Cn {\n  constructor(t, e) {\n    super(t), this.dt = e;\n  }\n  _toFieldTransform(t) {\n    const e = Yn(this, t, /*array=*/!0),\n      n = this.dt.map(t => rr(t, e)),\n      r = new Ve(n);\n    return new De(t.path, r);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\nclass Xn extends Cn {\n  constructor(t, e) {\n    super(t), this.dt = e;\n  }\n  _toFieldTransform(t) {\n    const e = Yn(this, t, /*array=*/!0),\n      n = this.dt.map(t => rr(t, e)),\n      r = new $e(n);\n    return new De(t.path, r);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\nclass Zn extends Cn {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n  _toFieldTransform(t) {\n    const e = new Ne(t.C, Ae(t.C, this.wt));\n    return new De(t.path, e);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\n\n/** Parse update data from an update() call. */\nfunction tr(t, e, n, r) {\n  const s = t.ft(1 /* UserDataSource.Update */, e, n);\n  or(\"Data must be an object, but it was:\", s, r);\n  const i = [],\n    o = de.empty();\n  Et(r, (t, r) => {\n    const u = ar(e, t, n);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    r = getModularInstance(r);\n    const c = s.ut(u);\n    if (r instanceof Kn)\n      // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      const t = rr(r, c);\n      null != t && (i.push(u), o.set(u, t));\n    }\n  });\n  const u = new fe(i);\n  return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nfunction er(t, e, n, r, s, i) {\n  const o = t.ft(1 /* UserDataSource.Update */, e, n),\n    u = [ur(e, r, n)],\n    c = [s];\n  if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n  for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n  const a = [],\n    h = de.empty();\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n    const e = u[t];\n    let n = c[t];\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    n = getModularInstance(n);\n    const r = o.ut(e);\n    if (n instanceof Kn)\n      // Add it to the field mask, but don't add anything to updateData.\n      a.push(e);else {\n      const t = rr(n, r);\n      null != t && (a.push(e), h.set(e, t));\n    }\n  }\n  const f = new fe(a);\n  return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nfunction nr(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */, e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nfunction rr(t, e) {\n  if (ir(\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n  if (t instanceof Cn)\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n      if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n      const n = t._toFieldTransform(e);\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */(t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties)\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  if (\n  // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n    return function (t, e) {\n      const n = [];\n      let r = 0;\n      for (const s of t) {\n        let t = rr(s, e.ct(r));\n        null == t && (\n        // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        t = {\n          nullValue: \"NULL_VALUE\"\n        }), n.push(t), r++;\n      }\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ae(e.C, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n    if (t instanceof Date) {\n      const n = Vt.fromDate(t);\n      return {\n        timestampValue: je(e.C, n)\n      };\n    }\n    if (t instanceof Vt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: je(e.C, n)\n      };\n    }\n    if (t instanceof Ln) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof qn) return {\n      bytesValue: Be(e.C, t._byteString)\n    };\n    if (t instanceof Pn) {\n      const n = e.databaseId,\n        r = t.firestore._databaseId;\n      if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n      return {\n        referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n    throw e.at(`Unsupported field value: ${ut(t)}`);\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */(t, e);\n}\nfunction sr(t, e) {\n  const n = {};\n  return !function (t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /** Converts a Base64 encoded string to a binary string. */(t) ? Et(t, (t, r) => {\n    const s = rr(r, e.st(t));\n    null != s && (n[t] = s);\n  }) :\n  // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\nfunction ir(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\nfunction or(t, e, n) {\n  if (!ir(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    const r = ut(n);\n    throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction ur(t, e, n) {\n  if ((\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof On) return e._internalPath;\n  if (\"string\" == typeof e) return ar(t, e);\n  throw hr(\"Field path arguments must be of type string or \", t, /* hasConverter= */!1, /* path= */void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nfunction ar(t, e, n) {\n  if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, /* hasConverter= */!1, /* path= */void 0, n);\n  try {\n    return new On(...e.split(\".\"))._internalPath;\n  } catch (r) {\n    throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, /* hasConverter= */!1, /* path= */void 0, n);\n  }\n}\nfunction hr(t, e, n, r, s) {\n  const i = r && !r.isEmpty(),\n    o = void 0 !== s;\n  let u = `Function ${e}() called with invalid data`;\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  let c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction lr(t, e) {\n  return t.some(t => t.isEqual(e));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nclass fr {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n  /** @hideconstructor protected */\n  constructor(t, e, n, r, s) {\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n  get ref() {\n    return new Pn(this._firestore, this._converter, this._key);\n  }\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n  exists() {\n    return null !== this._document;\n  }\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n  data() {\n    if (this._document) {\n      if (this._converter) {\n        // We only want to use the converter and create a new DocumentSnapshot\n        // if a converter has been provided.\n        const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, /* converter= */null);\n        return this._converter.fromFirestore(t);\n      }\n      return this._userDataWriter.convertValue(this._document.data.value);\n    }\n  }\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(t) {\n    if (this._document) {\n      const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n      if (null !== e) return this._userDataWriter.convertValue(e);\n    }\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nclass dr extends fr {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data() {\n    return super.data();\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nclass wr {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs() {\n    return [...this._docs];\n  }\n  /** The number of documents in the `QuerySnapshot`. */\n  get size() {\n    return this.docs.length;\n  }\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty() {\n    return 0 === this.docs.length;\n  }\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(t, e) {\n    this._docs.forEach(t, e);\n  }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nfunction mr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && Sn(t.query, e.query) && vt(t.docs, e.docs, mr);\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nfunction pr(t, e) {\n  return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass gr extends yr {}\nfunction _r(t, e) {\n  let r = [];\n  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    n[_key8 - 2] = arguments[_key8];\n  }\n  e instanceof yr && r.push(e), r = r.concat(n), function (t) {\n    const e = t.filter(t => t instanceof Er).length,\n      n = t.filter(t => t instanceof vr).length;\n    if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * Converts Firestore's internal types to the JavaScript types that we expose\n  * to the user.\n  *\n  * @internal\n  */(r);\n  for (const e of r) t = e._apply(t);\n  return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nclass vr extends gr {\n  /**\n   * @internal\n   */\n  constructor(t, e, n) {\n    super(), this._field = t, this._op = e, this._value = n, /** The type of this query constraint */\n    this.type = \"where\";\n  }\n  static _create(t, e, n) {\n    return new vr(t, e, n);\n  }\n  _apply(t) {\n    const e = this._parse(t);\n    return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n  }\n  _parse(t) {\n    const e = Wn(t.firestore),\n      n = function (t, e, n, r, s, i, o) {\n        let u;\n        if (s.isKeyField()) {\n          if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n          if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n            Cr(o, i);\n            const e = [];\n            for (const n of o) e.push(kr(r, t, n));\n            u = {\n              arrayValue: {\n                values: e\n              }\n            };\n          } else u = kr(r, t, o);\n        } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), u = nr(n, e, o, /* allowArrays= */\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n        return Gt.create(s, i, u);\n      }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n    return n;\n  }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nfunction br(t, e, n) {\n  const r = e,\n    s = pr(\"where\", t);\n  return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\nclass Er extends yr {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e) {\n    super(), this.type = t, this._queryConstraints = e;\n  }\n  static _create(t, e) {\n    return new Er(t, e);\n  }\n  _parse(t) {\n    const e = this._queryConstraints.map(e => e._parse(t)).filter(t => t.getFilters().length > 0);\n    return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n  }\n  _apply(t) {\n    const e = this._parse(t);\n    return 0 === e.getFilters().length ? t : (function (t, e) {\n      let n = t;\n      const r = e.getFlattenedFilters();\n      for (const t of r) Lr(n, t), n = Ie(n, t);\n    }\n    // Checks if any of the provided filter operators are included in the given list of filters and\n    // returns the first one that is, or null if none are.\n    (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n  }\n  _getQueryConstraints() {\n    return this._queryConstraints;\n  }\n  _getOperator() {\n    return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n  }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\nfunction Ir() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n  // Only support QueryFilterConstraints\n  return t.forEach(t => Ur(\"or\", t)), Er._create(\"or\" /* CompositeOperator.OR */, t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */\nfunction Tr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n  // Only support QueryFilterConstraints\n  return t.forEach(t => Ur(\"and\", t)), Er._create(\"and\" /* CompositeOperator.AND */, t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\nclass Ar extends gr {\n  /**\n   * @internal\n   */\n  constructor(t, e) {\n    super(), this._field = t, this._direction = e, /** The type of this query constraint */\n    this.type = \"orderBy\";\n  }\n  static _create(t, e) {\n    return new Ar(t, e);\n  }\n  _apply(t) {\n    const e = function (t, e, n) {\n      if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n      if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n      const r = new se(e, n);\n      return function (t, e) {\n        if (null === ge(t)) {\n          // This is the first order by. It must match any inequality.\n          const n = _e(t);\n          null !== n && Mr(t, n, e.field);\n        }\n      }(t, r), r;\n    }\n    /**\n    * Create a `Bound` from a query and a document.\n    *\n    * Note that the `Bound` will always include the key of the document\n    * and so only the provided document will compare equal to the returned\n    * position.\n    *\n    * Will throw if the document does not contain all fields of the order by\n    * of the query or if any of the fields in the order by are an uncommitted\n    * server timestamp.\n    */(t._query, this._field, this._direction);\n    return new Vn(t.firestore, t.converter, function (t, e) {\n      // TODO(dimond): validate that orderBy does not list the same key twice.\n      const n = t.explicitOrderBy.concat([e]);\n      return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, e));\n  }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\nfunction Rr(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  const n = e,\n    r = pr(\"orderBy\", t);\n  return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nclass Pr extends gr {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._limit = e, this._limitType = n;\n  }\n  static _create(t, e, n) {\n    return new Pr(t, e, n);\n  }\n  _apply(t) {\n    return new Vn(t.firestore, t.converter, function (t, e, n) {\n      return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n    }(t._query, this._limit, this._limitType));\n  }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction Vr(t) {\n  return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction $r(t) {\n  return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\nclass Nr extends gr {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n  }\n  static _create(t, e, n) {\n    return new Nr(t, e, n);\n  }\n  _apply(t) {\n    const e = Or(t, this.type, this._docOrFields, this._inclusive);\n    return new Vn(t.firestore, t.converter, function (t, e) {\n      return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n    }(t._query, e));\n  }\n}\nfunction Dr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n  return Nr._create(\"startAt\", t, /*inclusive=*/!0);\n}\nfunction Fr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n  return Nr._create(\"startAfter\", t, /*inclusive=*/!1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\nclass xr extends gr {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n  }\n  static _create(t, e, n) {\n    return new xr(t, e, n);\n  }\n  _apply(t) {\n    const e = Or(t, this.type, this._docOrFields, this._inclusive);\n    return new Vn(t.firestore, t.converter, function (t, e) {\n      return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n    }(t._query, e));\n  }\n}\nfunction Sr() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n  return xr._create(\"endBefore\", t, /*inclusive=*/!1);\n}\nfunction qr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n  return xr._create(\"endAt\", t, /*inclusive=*/!0);\n}\n\n/** Helper function to create a bound from a document or fields */\nfunction Or(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof fr) return function (t, e, n, r, s) {\n    if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n    const i = [];\n    // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n    for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key));else {\n      const t = r.data.field(n.field);\n      if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n      if (null === t) {\n        const t = n.field.canonicalString();\n        throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n      }\n      i.push(t);\n    }\n    return new Qt(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */(t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    const s = Wn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      const o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n      const u = [];\n      for (let i = 0; i < s.length; i++) {\n        const c = s[i];\n        if (o[i].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n          if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n          const n = t.path.child(tt.fromString(c));\n          if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n          const s = new rt(n);\n          u.push(Ct(e, s));\n        } else {\n          const t = nr(n, r, c);\n          u.push(t);\n        }\n      }\n      return new Qt(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */(t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\nfunction kr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n    const r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n    return Ct(t, new rt(r));\n  }\n  if (n instanceof Pn) return Ct(t, n._key);\n  throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction Cr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n  if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\nfunction Lr(t, e) {\n  if (e.isInequality()) {\n    const n = _e(t),\n      r = e.field;\n    if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n    const s = ge(t);\n    null !== s && Mr(t, r, s);\n  }\n  const n = function (t, e) {\n    for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n    return null;\n  }(t.filters, function (t) {\n    switch (t) {\n      case \"!=\" /* Operator.NOT_EQUAL */:\n        return [\"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */];\n\n      case \"array-contains\" /* Operator.ARRAY_CONTAINS */:\n        return [\"array-contains\" /* Operator.ARRAY_CONTAINS */, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, \"not-in\" /* Operator.NOT_IN */];\n\n      case \"in\" /* Operator.IN */:\n        return [\"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, \"in\" /* Operator.IN */, \"not-in\" /* Operator.NOT_IN */];\n\n      case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */:\n        return [\"array-contains\" /* Operator.ARRAY_CONTAINS */, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, \"in\" /* Operator.IN */, \"not-in\" /* Operator.NOT_IN */];\n\n      case \"not-in\" /* Operator.NOT_IN */:\n        return [\"array-contains\" /* Operator.ARRAY_CONTAINS */, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, \"in\" /* Operator.IN */, \"not-in\" /* Operator.NOT_IN */, \"!=\" /* Operator.NOT_EQUAL */];\n\n      default:\n        return [];\n    }\n  }(e.op));\n  if (null !== n)\n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\nfunction Mr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\nfunction Ur(t, e) {\n  if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n  let r;\n  // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\nclass Br extends class {\n  convertValue(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n    switch (xt(t)) {\n      case 0 /* TypeOrder.NullValue */:\n        return null;\n      case 1 /* TypeOrder.BooleanValue */:\n        return t.booleanValue;\n      case 2 /* TypeOrder.NumberValue */:\n        return Rt(t.integerValue || t.doubleValue);\n      case 3 /* TypeOrder.TimestampValue */:\n        return this.convertTimestamp(t.timestampValue);\n      case 4 /* TypeOrder.ServerTimestampValue */:\n        return this.convertServerTimestamp(t, e);\n      case 5 /* TypeOrder.StringValue */:\n        return t.stringValue;\n      case 6 /* TypeOrder.BlobValue */:\n        return this.convertBytes(Pt(t.bytesValue));\n      case 7 /* TypeOrder.RefValue */:\n        return this.convertReference(t.referenceValue);\n      case 8 /* TypeOrder.GeoPointValue */:\n        return this.convertGeoPoint(t.geoPointValue);\n      case 9 /* TypeOrder.ArrayValue */:\n        return this.convertArray(t.arrayValue, e);\n      case 10 /* TypeOrder.ObjectValue */:\n        return this.convertObject(t.mapValue, e);\n      default:\n        throw b();\n    }\n  }\n  convertObject(t, e) {\n    const n = {};\n    return Et(t.fields, (t, r) => {\n      n[t] = this.convertValue(r, e);\n    }), n;\n  }\n  convertGeoPoint(t) {\n    return new Ln(Rt(t.latitude), Rt(t.longitude));\n  }\n  convertArray(t, e) {\n    return (t.values || []).map(t => this.convertValue(t, e));\n  }\n  convertServerTimestamp(t, e) {\n    switch (e) {\n      case \"previous\":\n        const n = Nt(t);\n        return null == n ? null : this.convertValue(n, e);\n      case \"estimate\":\n        return this.convertTimestamp(Dt(t));\n      default:\n        return null;\n    }\n  }\n  convertTimestamp(t) {\n    const e = At(t);\n    return new Vt(e.seconds, e.nanos);\n  }\n  convertDocumentKey(t, e) {\n    const n = tt.fromString(t);\n    E(cn(n));\n    const r = new X(n.get(1), n.get(3)),\n      s = new rt(n.popFirst(5));\n    return r.isEqual(e) ||\n    // TODO(b/64130202): Somehow support foreign references.\n    g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), s;\n  }\n} {\n  constructor(t) {\n    super(), this.firestore = t;\n  }\n  convertBytes(t) {\n    return new qn(t);\n  }\n  convertReference(t) {\n    const e = this.convertDocumentKey(t, this.firestore._databaseId);\n    return new Pn(this.firestore, /* converter= */null, e);\n  }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\nfunction Qr(t) {\n  const e = yn((t = ct(t, Pn)).firestore),\n    n = new Br(t.firestore);\n  return dn(e, [t._key]).then(e => {\n    E(1 === e.length);\n    const r = e[0];\n    return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\nfunction zr(t) {\n  !function (t) {\n    if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, Vn))._query);\n  const e = yn(t.firestore),\n    n = new Br(t.firestore);\n  return wn(e, t._query).then(e => {\n    const r = e.map(e => new dr(t.firestore, n, e.key, e, t.converter));\n    return \"L\" /* LimitType.Last */ === t._query.limitType &&\n    // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new wr(t, r);\n  });\n}\nfunction Wr(t, e, n) {\n  const r = jr((t = ct(t, Pn)).converter, e, n),\n    s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return fn(yn(t.firestore), [s.toMutation(t._key, Fe.none())]);\n}\nfunction Gr(t, e, n) {\n  const s = Wn((t = ct(t, Pn)).firestore);\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  let i;\n  for (var _len15 = arguments.length, r = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    r[_key15 - 3] = arguments[_key15];\n  }\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n  return fn(yn(t.firestore), [i.toMutation(t._key, Fe.exists(!0))]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\nfunction Kr(t) {\n  return fn(yn((t = ct(t, Pn)).firestore), [new Oe(t._key, Fe.none())]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\nfunction Yr(t, e) {\n  const n = Fn(t = ct(t, $n)),\n    r = jr(t.converter, e),\n    s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return fn(yn(t.firestore), [s.toMutation(n._key, Fe.exists(!1))]).then(() => n);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\nfunction Hr(t) {\n  const e = ct(t.firestore, _n),\n    n = yn(e),\n    r = new Br(e);\n  return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\nfunction Jr(t, e) {\n  return Sn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\nfunction Xr() {\n  return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\nfunction Zr() {\n  return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\nfunction ts() {\n  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    t[_key16] = arguments[_key16];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction es() {\n  for (var _len17 = arguments.length, t = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    t[_key17] = arguments[_key17];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction ns(t) {\n  return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\nclass rs {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Wn(t);\n  }\n  set(t, e, n) {\n    this._verifyNotCommitted();\n    const r = ss(t, this._firestore),\n      s = jr(r.converter, e, n),\n      i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n    return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n  }\n  update(t, e, n) {\n    this._verifyNotCommitted();\n    const s = ss(t, this._firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    let i;\n    for (var _len18 = arguments.length, r = new Array(_len18 > 3 ? _len18 - 3 : 0), _key18 = 3; _key18 < _len18; _key18++) {\n      r[_key18 - 3] = arguments[_key18];\n    }\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `WriteBatch` instance. Used for chaining method calls.\n   */\n  delete(t) {\n    this._verifyNotCommitted();\n    const e = ss(t, this._firestore);\n    return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n  }\n  /**\n   * Commits all of the writes in this write batch as a single atomic unit.\n   *\n   * The result of these writes will only be reflected in document reads that\n   * occur after the returned promise resolves. If the client is offline, the\n   * write fails. If you would like to see local modifications or buffer writes\n   * until the client is online, use the full Firestore SDK.\n   *\n   * @returns A `Promise` resolved once all of the writes in the batch have been\n   * successfully written to the backend as an atomic unit (note that it won't\n   * resolve while you're offline).\n   */\n  commit() {\n    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n  }\n  _verifyNotCommitted() {\n    if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n  }\n}\nfunction ss(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\nfunction is(t) {\n  const e = yn(t = ct(t, _n));\n  return new rs(t, t => fn(e, t));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass os {\n  constructor(t) {\n    this.datastore = t,\n    // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n  async lookup(t) {\n    if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n    const e = await dn(this.datastore, t);\n    return e.forEach(t => this.recordVersion(t)), e;\n  }\n  set(t, e) {\n    this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n  update(t, e) {\n    try {\n      this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n    } catch (t) {\n      this.lastWriteError = t;\n    }\n    this.writtenDocs.add(t.toString());\n  }\n  delete(t) {\n    this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n  async commit() {\n    if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n    const t = this.readVersions;\n    // For each mutation, note that the doc was written.\n    this.mutations.forEach(e => {\n      t.delete(e.key.toString());\n    }),\n    // For each document that was read but not written to, we want to perform\n    // a `verify` operation.\n    t.forEach((t, e) => {\n      const n = rt.fromPath(e);\n      this.mutations.push(new ke(n, this.precondition(n)));\n    }), await fn(this.datastore, this.mutations), this.committed = !0;\n  }\n  recordVersion(t) {\n    let e;\n    if (t.isFoundDocument()) e = t.version;else {\n      if (!t.isNoDocument()) throw b();\n      // Represent a deleted doc using SnapshotVersion.min().\n      e = oe.min();\n    }\n    const n = this.readVersions.get(t.key.toString());\n    if (n) {\n      if (!e.isEqual(n))\n        // This transaction will fail no matter what.\n        throw new U(q, \"Document version changed between two reads.\");\n    } else this.readVersions.set(t.key.toString(), e);\n  }\n  /**\n   * Returns the version of this document when it was read in this transaction,\n   * as a precondition, or no precondition if it was not read.\n   */\n  precondition(t) {\n    const e = this.readVersions.get(t.toString());\n    return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n  }\n  /**\n   * Returns the precondition for a document if the operation is an update.\n   */\n  preconditionForUpdate(t) {\n    const e = this.readVersions.get(t.toString());\n    // The first time a document is written, we want to take into account the\n    // read time and existence\n    if (!this.writtenDocs.has(t.toString()) && e) {\n      if (e.isEqual(oe.min()))\n        // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new U(P, \"Can't update a document that doesn't exist.\");\n      // Document exists, base precondition on document update time.\n      return Fe.updateTime(e);\n    }\n    // Document was not read, so we just use the preconditions for a blind\n    // update.\n    return Fe.exists(!0);\n  }\n  write(t) {\n    this.ensureCommitNotCalled(), this.mutations.push(t);\n  }\n  ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst us = {\n  maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n  }\n  /** Runs the transaction and sets the result on deferred. */\n  run() {\n    this.yt -= 1, this._t();\n  }\n  _t() {\n    this.gt.H(async () => {\n      const t = new os(this.datastore),\n        e = this.vt(t);\n      e && e.then(e => {\n        this.asyncQueue.enqueueAndForget(() => t.commit().then(() => {\n          this.deferred.resolve(e);\n        }).catch(t => {\n          this.bt(t);\n        }));\n      }).catch(t => {\n        this.bt(t);\n      });\n    });\n  }\n  vt(t) {\n    try {\n      const e = this.updateFunction(t);\n      return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n    } catch (t) {\n      // Do not retry errors thrown by user provided updateFunction.\n      return this.deferred.reject(t), null;\n    }\n  }\n  bt(t) {\n    this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget(() => (this._t(), Promise.resolve()))) : this.deferred.reject(t);\n  }\n  Et(t) {\n    if (\"FirebaseError\" === t.name) {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      const e = t.code;\n      return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n      /**\n      * Determines whether an error code represents a permanent error when received\n      * in response to a non-write operation.\n      *\n      * See isPermanentWriteError for classifying write errors.\n      */\n      function (t) {\n        switch (t) {\n          default:\n            return b();\n          case A:\n          case R:\n          case V:\n          case x:\n          case C:\n          case L:\n          // Unauthenticated means something went wrong with our token and we need\n          // to retry with new credentials which will happen automatically.\n          case F:\n            return !1;\n          case P:\n          case $:\n          case N:\n          case D:\n          case S:\n          // Aborted might be retried in some scenarios, but that is dependant on\n          // the context and should handled individually by the calling code.\n          // See https://cloud.google.com/apis/design/errors.\n          case q:\n          case O:\n          case k:\n          case M:\n            return !0;\n        }\n      }(e);\n    }\n    return !1;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */\nfunction as() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass hs {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise),\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(t => {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  static createAndSchedule(t, e, n, r, s) {\n    const i = Date.now() + n,\n      o = new hs(t, e, i, r, s);\n    return o.start(n), o;\n  }\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n  start(t) {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t);\n  }\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n  skipDelay() {\n    return this.handleDelayElapsed();\n  }\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n  cancel(t) {\n    null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n  }\n  handleDelayElapsed() {\n    this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then(t => this.deferred.resolve(t))) : Promise.resolve());\n  }\n  clearTimeout() {\n    null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ls {\n  constructor() {\n    // The last promise in the queue.\n    this.It = Promise.resolve(),\n    // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Tt = [],\n    // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.At = !1,\n    // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.Rt = [],\n    // visible for testing\n    this.Pt = null,\n    // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Vt = !1,\n    // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.$t = !1,\n    // List of TimerIds to fast-forward delays for.\n    this.Nt = [],\n    // Backoff timer used to schedule retries for retryable operations\n    this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */),\n    // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Dt = () => {\n      const t = as();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n    };\n    const t = as();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n  }\n  get isShuttingDown() {\n    return this.At;\n  }\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget(t) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(t);\n  }\n  enqueueAndForgetEvenWhileRestricted(t) {\n    this.Ft(),\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.xt(t);\n  }\n  enterRestrictedMode(t) {\n    if (!this.At) {\n      this.At = !0, this.$t = t || !1;\n      const e = as();\n      e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n    }\n  }\n  enqueue(t) {\n    if (this.Ft(), this.At)\n      // Return a Promise which never resolves.\n      return new Promise(() => {});\n    // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n    const e = new j();\n    return this.xt(() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise)).then(() => e.promise);\n  }\n  enqueueRetryable(t) {\n    this.enqueueAndForget(() => (this.Tt.push(t), this.St()));\n  }\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n  async St() {\n    if (0 !== this.Tt.length) {\n      try {\n        await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n      } catch (t) {\n        if (!\n        /**\n        * @license\n        * Copyright 2017 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        /** Verifies whether `e` is an IndexedDbTransactionError. */\n        function (t) {\n          // Use name equality, as instanceof checks on errors don't work with errors\n          // that wrap other errors.\n          return \"IndexedDbTransactionError\" === t.name;\n        }\n        /**\n        * @license\n        * Copyright 2020 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */(t)) throw t;\n        // Failure will be handled by AsyncQueue\n        y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n      }\n      this.Tt.length > 0 &&\n      // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.gt.H(() => this.St());\n    }\n  }\n  xt(t) {\n    const e = this.It.then(() => (this.Vt = !0, t().catch(t => {\n      this.Pt = t, this.Vt = !1;\n      const e =\n      /**\n      * Chrome includes Error.message in Error.stack. Other browsers do not.\n      * This returns expected output of message + stack when available.\n      * @param error - Error or FirestoreError\n      */\n      function (t) {\n        let e = t.message || \"\";\n        t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n      // legacy SDK.\n      /**\n      * A reference to a transaction.\n      *\n      * The `Transaction` object passed to a transaction's `updateFunction` provides\n      * the methods to read and write data within the transaction context. See\n      * {@link runTransaction}.\n      */(t);\n      // Re-throw the error so that this.tail becomes a rejected Promise and\n      // all further attempts to chain (via .then) will just short-circuit\n      // and return the rejected Promise.\n      throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n    }).then(t => (this.Vt = !1, t))));\n    return this.It = e, e;\n  }\n  enqueueAfterDelay(t, e, n) {\n    this.Ft(),\n    // Fast-forward delays for timerIds that have been overriden.\n    this.Nt.indexOf(t) > -1 && (e = 0);\n    const r = hs.createAndSchedule(this, t, e, n, t => this.qt(t));\n    return this.Rt.push(r), r;\n  }\n  Ft() {\n    this.Pt && b();\n  }\n  verifyOperationInProgress() {}\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n  async Ot() {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let t;\n    do {\n      t = this.It, await t;\n    } while (t !== this.It);\n  }\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n  kt(t) {\n    for (const e of this.Rt) if (e.timerId === t) return !0;\n    return !1;\n  }\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n  Ct(t) {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.Ot().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.Rt.sort((t, e) => t.targetTimeMs - e.targetTimeMs);\n      for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n      return this.Ot();\n    });\n  }\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n  Lt(t) {\n    this.Nt.push(t);\n  }\n  /** Called once a DelayedOperation is run or canceled. */\n  qt(t) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const e = this.Rt.indexOf(t);\n    this.Rt.splice(e, 1);\n  }\n}\nclass fs {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n  get(t) {\n    const e = ss(t, this._firestore),\n      n = new Br(this._firestore);\n    return this._transaction.lookup([e._key]).then(t => {\n      if (!t || 1 !== t.length) return b();\n      const r = t[0];\n      if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n      if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n      throw b();\n    });\n  }\n  set(t, e, n) {\n    const r = ss(t, this._firestore),\n      s = jr(r.converter, e, n),\n      i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n    return this._transaction.set(r._key, i), this;\n  }\n  update(t, e, n) {\n    const s = ss(t, this._firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    let i;\n    for (var _len19 = arguments.length, r = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {\n      r[_key19 - 3] = arguments[_key19];\n    }\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `Transaction` instance. Used for chaining method calls.\n   */\n  delete(t) {\n    const e = ss(t, this._firestore);\n    return this._transaction.delete(e._key), this;\n  }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\nfunction ds(t, e, n) {\n  const r = yn(t = ct(t, _n)),\n    s = Object.assign(Object.assign({}, us), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  const i = new j();\n  return new cs(new ls(), r, s, n => e(new fs(t, n)), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n!function (t) {\n  w = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", (t, _ref5) => {\n  let {\n    instanceIdentifier: e,\n    options: n\n  } = _ref5;\n  const r = t.getProvider(\"app\").getImmediate(),\n    s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n      return new X(t.options.projectId, e);\n    }\n    /**\n    * @license\n    * Copyright 2017 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */(r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)),\n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.8.0\", \"\"), registerVersion(\"firestore-lite\", \"3.8.0\", \"esm2017\");\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };","map":{"version":3,"mappings":"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gB,CAAC,EAAExiB,CAAC,CAACgkB,OAAO,EAAE;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMiB,EAAE,CAAC;EACLllB,WAAW,GAAG;IAClB;IACQ,IAAI,CAACkE,IAAI,GAAG,gBAAgB;EACpC;AACA;;AAEA;AACA;AACA;AAAI,MAAMihB,EAAE,CAAC;EACb;EACInlB,WAAW,CAACC,CAAC,EAAEkB,CAAC,EAAE;IACd,IAAI,CAACikB,KAAK,GAAGjkB,CAAC,EACtB;IACQ,IAAI,CAAC+C,IAAI,GAAG,wBAAwB,EAAE,IAAI,CAACmhB,KAAK,GAAGplB,CAAC;EAC5D;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAAW8T,IAAI,GAAG;IACV,OAAO,IAAI,CAACqR,KAAK;EACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,MAAME,EAAE,CAAC;EACTtlB,WAAW,CAACC,CAAC,EAAEkB,CAAC,EAAEC,CAAC,EAAE;IACjB,IAAI,CAACikB,KAAK,GAAGplB,CAAC,EAAE,IAAI,CAACslB,SAAS,GAAGpkB,CAAC,EAAE,IAAI,CAACqkB,cAAc,GAAGpkB,CAAC;EACnE;EACIqkB,GAAG,GAAG;IACF,OAAO7D,EAAE,CAAC,IAAI,CAAC2D,SAAS,EAAE,IAAI,CAACF,KAAK,CAACK,MAAM,CAAC,CAACxgB,IAAI,CAAEjF,CAAC,IAAI;MACpDiC,CAAC,CAAC,KAAK,CAAC,KAAKjC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,MAAMkB,CAAC,GAAGuM,MAAM,CAACiY,OAAO,CAAC1lB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC2I,MAAM,CAAE;QAAA,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","names":["d","constructor","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","o","p","setLogLevel","y","logLevel","u","DEBUG","e","n","map","v","debug","g","ERROR","error","_","WARN","warn","JSON","stringify","b","Error","E","I","T","A","R","P","V","$","N","D","F","x","S","q","O","k","C","L","M","U","c","code","message","toString","name","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","z","token","changeListener","W","auth","onInit","then","accessToken","getUid","G","r","i","h","l","getAuthHeaderValueForFirstParty","K","Y","value","length","H","appCheck","J","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","projectId","database","empty","isDefaultDatabase","Z","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","join","fromString","indexOf","split","filter","emptyPath","et","nt","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","rt","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","st","it","ot","ut","substring","Array","ct","_delegate","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","databaseInfo","method","body","status","statusText","ok","json","isArray","yt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","gt","charAt","_t","vt","every","bt","Object","prototype","hasOwnProperty","call","Et","It","binaryString","fromBase64String","atob","fromUint8Array","String","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","Tt","RegExp","At","exec","substr","Number","Date","seconds","getTime","nanos","Rt","Pt","Vt","nanoseconds","now","fromMillis","fromDate","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","$t","mapValue","fields","__type__","stringValue","Nt","__previous_value__","Dt","__local_write_time__","timestampValue","Ft","xt","St","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","qt","find","Ot","kt","keys","sort","Ct","Lt","Mt","Ut","jt","Bt","assign","Qt","position","inclusive","zt","Wt","Gt","field","op","create","createKeyFieldInFilter","Ht","te","ee","ne","re","Jt","Xt","matches","data","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","Kt","filters","reduce","concat","Yt","key","Zt","some","nullValue","se","dir","ie","oe","timestamp","fromTimestamp","max","toMicroseconds","toTimestamp","ue","root","ae","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","ce","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","he","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","le","add","delete","unionWith","iter","fe","covers","de","getFieldsMap","setAll","applyChanges","clone","we","documentType","version","readTime","createTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","me","orderBy","startAt","endAt","pe","ye","explicitOrderBy","limitType","ge","_e","ve","be","Ee","Ie","Te","Ae","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Re","Pe","Ve","elements","$e","Ne","De","transform","Fe","updateTime","exists","none","isNone","xe","Se","precondition","fieldTransforms","getFieldMask","qe","fieldMask","Oe","ke","Ce","asc","desc","Le","in","Me","and","or","Ue","je","toISOString","Be","Qe","ze","We","Ge","Ke","cn","Ye","He","Je","Xe","found","missing","Ze","update","updateMask","un","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","tn","structuredQuery","parent","from","collectionId","allDescendants","on","where","sn","direction","en","before","nn","rn","unaryFilter","fieldFilter","compositeFilter","fieldPaths","an","hn","timerId","reset","cancel","enqueueAfterDelay","skipDelay","ln","authCredentials","appCheckCredentials","connection","all","catch","terminate","fn","writes","dn","documents","wn","document","mn","structuredAggregationQuery","aggregations","count","alias","result","aggregateFields","pn","yn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","gn","credentials","ignoreUndefinedProperties","cacheSizeBytes","_n","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","vn","_getProvider","isInitialized","initialize","instanceIdentifier","bn","getImmediate","identifier","a","En","mockUserToken","sub","user_id","In","Tn","An","_data","query","Rn","datastore","userDataWriter","run","_query","entries","convertValue","Pn","converter","_key","firestore","_path","id","$n","withConverter","Vn","Nn","Dn","Fn","arguments","xn","Sn","qn","_byteString","On","_internalPath","kn","Cn","_methodName","Ln","isFinite","_lat","_long","Mn","Un","toMutation","jn","Bn","Qn","hr","methodName","contains","zn","Wn","Gn","merge","mergeFields","sr","ur","lr","Kn","_toFieldTransform","Yn","Hn","Jn","rr","Xn","Zn","tr","ar","er","f","nr","ir","getPrototypeOf","cr","search","fr","_firestore","_userDataWriter","_document","_converter","ref","dr","fromFirestore","pr","wr","_docs","docs","mr","yr","gr","_r","Er","vr","_apply","_field","_op","_value","_create","_parse","Lr","Cr","kr","br","_queryConstraints","_getOperator","_getQueryConstraints","Ir","Ur","Tr","Ar","_direction","Mr","Rr","Pr","_limit","_limitType","Vr","$r","Nr","_docOrFields","_inclusive","Or","Dr","Fr","xr","Sr","qr","jr","toFirestore","Br","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Qr","zr","reverse","Wr","Gr","Kr","Yr","Hr","Jr","Xr","Zr","ts","es","ns","rs","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ss","commit","is","os","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","us","maxAttempts","cs","asyncQueue","updateFunction","deferred","enqueueAndForget","as","hs","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","ls","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","verifyOperationInProgress","splice","fs","_transaction","ds","getProvider","apply","setMultipleInstances"],"sources":["/Users/pablo/Desktop/spablofy/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.0\", \"\"), r(\"firestore-lite\", \"3.8.0\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}