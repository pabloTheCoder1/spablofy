{"ast":null,"code":"var _jsxFileName = \"/Users/pablo/Desktop/spablofy/src/Upload.js\";\nimport React from 'react';\nimport upload from \"./images/upload.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar file1;\nconst Upload = () => {\n  function dropHandler(ev) {\n    ev.preventDefault();\n    if (ev.dataTransfer.items) {\n      [...ev.dataTransfer.items].forEach(item => {\n        if (item.kind === 'file') {\n          file1 = item.getAsFile();\n          console.log(file1);\n        }\n      });\n    } else {\n      [...ev.dataTransfer.files].forEach(file => {\n        file1 = file;\n        console.log(file1);\n      });\n    }\n  }\n  function dragOverHandler(ev) {\n    ev.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadSection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typewriter\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hello \", auth.currentUser.displayName, \"! Upload or drag your mp3 file right here.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: upload,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone\",\n        id: \"drop_zone\",\n        onDrop: dropHandler,\n        onDragOver: dragOverHandler,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"drop it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","upload","file1","Upload","dropHandler","ev","preventDefault","dataTransfer","items","forEach","item","kind","getAsFile","console","log","files","file","dragOverHandler","auth","currentUser","displayName"],"sources":["/Users/pablo/Desktop/spablofy/src/Upload.js"],"sourcesContent":["import React from 'react'\nimport upload from \"./images/upload.png\"\n\nvar file1\n\nconst Upload = () => {\n    function dropHandler(ev) {\n      ev.preventDefault();\n      if (ev.dataTransfer.items) {\n        [...ev.dataTransfer.items].forEach((item) => {\n          if (item.kind === 'file') {\n            file1 = item.getAsFile();\n            console.log(file1);\n          }\n        });\n      } else {\n        [...ev.dataTransfer.files].forEach((file) => {\n          file1 = file\n          console.log(file1);\n        });\n      }\n    }\n    \n    function dragOverHandler(ev) {\n      ev.preventDefault();\n    }\n    return (\n      <div className='uploadSection'>\n        <div className='upload'>\n          <div className=\"typewriter\">\n            <p>Hello {auth.currentUser.displayName}! Upload or drag your mp3 file right here.</p>\n          </div>\n          <div className='uploadButton'>\n            <button className='button'>\n              <span>Upload</span>\n              <img src={upload} alt=\"\" />\n            </button>\n          </div>\n          <div className=\"dropzone\" id=\"drop_zone\"\n            onDrop={dropHandler} onDragOver={dragOverHandler}>\n            <p>drop it</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\nexport default Upload\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AAAA;AAExC,IAAIC,KAAK;AAET,MAAMC,MAAM,GAAG,MAAM;EACjB,SAASC,WAAW,CAACC,EAAE,EAAE;IACvBA,EAAE,CAACC,cAAc,EAAE;IACnB,IAAID,EAAE,CAACE,YAAY,CAACC,KAAK,EAAE;MACzB,CAAC,GAAGH,EAAE,CAACE,YAAY,CAACC,KAAK,CAAC,CAACC,OAAO,CAAEC,IAAI,IAAK;QAC3C,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;UACxBT,KAAK,GAAGQ,IAAI,CAACE,SAAS,EAAE;UACxBC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;QACpB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,CAAC,GAAGG,EAAE,CAACE,YAAY,CAACQ,KAAK,CAAC,CAACN,OAAO,CAAEO,IAAI,IAAK;QAC3Cd,KAAK,GAAGc,IAAI;QACZH,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ;EACF;EAEA,SAASe,eAAe,CAACZ,EAAE,EAAE;IAC3BA,EAAE,CAACC,cAAc,EAAE;EACrB;EACA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,uBAC5B;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB;UAAA,WAAG,QAAM,EAACY,IAAI,CAACC,WAAW,CAACC,WAAW,EAAC,4CAA0C;QAAA;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACjF,eACN;QAAK,SAAS,EAAC,cAAc;QAAA,uBAC3B;UAAQ,SAAS,EAAC,QAAQ;UAAA,wBACxB;YAAA,UAAM;UAAM;YAAA;YAAA;YAAA;UAAA,QAAO,eACnB;YAAK,GAAG,EAAEnB,MAAO;YAAC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACpB;QAAA;QAAA;QAAA;MAAA,QACL,eACN;QAAK,SAAS,EAAC,UAAU;QAAC,EAAE,EAAC,WAAW;QACtC,MAAM,EAAEG,WAAY;QAAC,UAAU,EAAEa,eAAgB;QAAA,uBACjD;UAAA,UAAG;QAAO;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KAxCGd,MAAM;AA0CZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}