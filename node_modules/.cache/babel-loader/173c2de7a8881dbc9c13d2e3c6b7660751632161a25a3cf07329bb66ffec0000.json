{"ast":null,"code":"var _jsxFileName = \"/Users/pablo/Desktop/spablofy/src/Music.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport play from \"./images/play.png\";\nimport pause from \"./images/pause.png\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Music = () => {\n  _s();\n  const [paused, setPaused] = useState(false);\n  let img = play;\n  function toggleCheck() {\n    setPaused(!paused);\n  }\n  if (!paused) {\n    img = play;\n  } else {\n    img = pause;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playSection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playAndName\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Dream it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playButton\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"\",\n            className: \"playIcon\",\n            onClick: toggleCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs\",\n      children: songs && songs.map(song => /*#__PURE__*/_jsxDEV(\"singolSong\", {\n        song: song\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n  function singolSong(props) {\n    const {\n      text,\n      uid,\n      photoURL,\n      username,\n      time,\n      picture,\n      createdAt,\n      imageName\n    } = props.song;\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Music, \"LP+gq1++PMwIUyU0wT6HzqErKY0=\");\n_c = Music;\nexport default Music;\nvar _c;\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"names":["React","play","pause","useState","Music","paused","setPaused","img","toggleCheck","songs","map","song","id","singolSong","props","text","uid","photoURL","username","time","picture","createdAt","imageName"],"sources":["/Users/pablo/Desktop/spablofy/src/Music.js"],"sourcesContent":["import React from 'react'\nimport play from \"./images/play.png\"\nimport pause from \"./images/pause.png\"\n\nimport { useState } from \"react\"\n\n\nconst Music = () => {\n  const [paused, setPaused] = useState(false)\n  let img = play\n  function toggleCheck() {\n    setPaused(!paused)\n  }\n  if (!paused) {\n    img = play\n  }\n  else {\n    img = pause\n  }\n  return (\n    <div className=\"music\">\n      <div className='playSection'>\n        <div className='playAndName'>\n          <p>Dream it</p>\n          <div className='playButton'>\n            <img src={img} alt=\"\" className='playIcon' onClick={toggleCheck}/>\n          </div>\n        </div>\n      </div>\n      <div className='songs'>\n        {songs && songs.map(song => \n        <singolSong key={song.id} song={song} />)}\n      </div>\n    </div>\n  )\n\n  function singolSong(props){\n    const{ text, uid, photoURL, username, time, picture, createdAt, imageName } = props.song;\n\n    return (\n      <div>\n      </div>)\n  }\n}\n\n\nexport default Music\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAGhC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAC3C,IAAII,GAAG,GAAGN,IAAI;EACd,SAASO,WAAW,GAAG;IACrBF,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB;EACA,IAAI,CAACA,MAAM,EAAE;IACXE,GAAG,GAAGN,IAAI;EACZ,CAAC,MACI;IACHM,GAAG,GAAGL,KAAK;EACb;EACA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAA,UAAG;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAI,eACf;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB;YAAK,GAAG,EAAEK,GAAI;YAAC,GAAG,EAAC,EAAE;YAAC,SAAS,EAAC,UAAU;YAAC,OAAO,EAAEC;UAAY;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAC9D;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,UACnBC,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACC,IAAI,iBACxB;QAA0B,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAC;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;EAGR,SAASC,UAAU,CAACC,KAAK,EAAC;IACxB,MAAK;MAAEC,IAAI;MAAEC,GAAG;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAAU,CAAC,GAAGR,KAAK,CAACH,IAAI;IAExF,oBACE;MAAA;MAAA;MAAA;IAAA,QACM;EACV;AACF,CAAC;AAAA,GApCKP,KAAK;AAAA,KAALA,KAAK;AAuCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}